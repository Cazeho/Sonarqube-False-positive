[
    {
        "code": [
            {
                "endLine": "5",
                "endOffset": "46",
                "startLine": "5",
                "startOffset": "0"
            },
            {
                "src": "from administration.factories.service import *"
            }
        ],
        "key": "AXcqnsqp-n2LilEsa3bJ",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "6",
                "endOffset": "35",
                "startLine": "6",
                "startOffset": "0"
            },
            {
                "src": "from administration.models import *"
            }
        ],
        "key": "AXcqnsqp-n2LilEsa3bK",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "12",
                "endOffset": "11",
                "startLine": "12",
                "startOffset": "4"
            },
            {
                "src": "    Service = apps.get_model('administration', 'Service')"
            }
        ],
        "key": "AXcqnsmO-n2LilEsa3at",
        "msg": "Rename this local variable \\Service\\ to match the regular expression ^[_a-z][a-z0-9_]*$.",
        "rule": "python:S117",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "9",
                "endOffset": "11",
                "startLine": "9",
                "startOffset": "4"
            },
            {
                "src": "    Service = apps.get_model('administration', 'Service')"
            }
        ],
        "key": "AXcqnsnU-n2LilEsa3a4",
        "msg": "Rename this local variable \\Service\\ to match the regular expression ^[_a-z][a-z0-9_]*$.",
        "rule": "python:S117",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "4",
                "endOffset": "39",
                "startLine": "4",
                "startOffset": "0"
            },
            {
                "src": "from administration.views.ajax import *"
            }
        ],
        "key": "AXcqnss8-n2LilEsa3ba",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "8",
                "endOffset": "43",
                "startLine": "8",
                "startOffset": "0"
            },
            {
                "src": "from administration.models.service import *"
            }
        ],
        "key": "AXcqnstY-n2LilEsa3bb",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "5",
                "endOffset": "35",
                "startLine": "5",
                "startOffset": "0"
            },
            {
                "src": "from administration.models import *"
            }
        ],
        "key": "AXcqnst2-n2LilEsa3be",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "5",
                "endOffset": "21",
                "startLine": "5",
                "startOffset": "0"
            },
            {
                "src": "from .models import *"
            }
        ],
        "key": "AXcqnrhT-n2LilEsa3V2",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "11",
                "endOffset": "11",
                "startLine": "11",
                "startOffset": "8"
            },
            {
                "src": "        zip = self.cleaned_data['zip_code']"
            }
        ],
        "key": "AXcqnrjt-n2LilEsa3V3",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "30",
                "endOffset": "14",
                "startLine": "30",
                "startOffset": "8"
            },
            {
                "src": "        except:"
            }
        ],
        "key": "AXcqnrga-n2LilEsa3V1",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "6",
                "endOffset": "31",
                "startLine": "6",
                "startOffset": "0"
            },
            {
                "src": "from agreements.models import *"
            }
        ],
        "key": "AXcqnsDl-n2LilEsa3Xw",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "6",
                "endOffset": "31",
                "startLine": "6",
                "startOffset": "0"
            },
            {
                "src": "from agreements.models import *"
            }
        ],
        "key": "AXcqnsEh-n2LilEsa3Xy",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "6",
                "endOffset": "31",
                "startLine": "6",
                "startOffset": "0"
            },
            {
                "src": "from agreements.models import *"
            }
        ],
        "key": "AXcqnsDL-n2LilEsa3Xv",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "6",
                "endOffset": "31",
                "startLine": "6",
                "startOffset": "0"
            },
            {
                "src": "from agreements.models import *"
            }
        ],
        "key": "AXcqnsEF-n2LilEsa3Xx",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "6",
                "endOffset": "31",
                "startLine": "6",
                "startOffset": "0"
            },
            {
                "src": "from agreements.models import *"
            }
        ],
        "key": "AXcqnsFB-n2LilEsa3Xz",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "57",
                "endOffset": "14",
                "startLine": "57",
                "startOffset": "12"
            },
            {
                "src": "            if instance.get_instance().get_workflow_ggd() == Instance.WF_EDSR:"
            }
        ],
        "key": "AXcqnsBo-n2LilEsa3Xn",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "58",
                "endOffset": "18",
                "startLine": "58",
                "startOffset": "16"
            },
            {
                "src": "                if not EDSRAvis.objects.filter(authorization=instance).exists():"
            }
        ],
        "key": "AXcqnsBo-n2LilEsa3Xo",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "67",
                "endOffset": "14",
                "startLine": "67",
                "startOffset": "12"
            },
            {
                "src": "            if not GGDAvis.objects.filter(authorization=instance).exists():"
            }
        ],
        "key": "AXcqnsBo-n2LilEsa3Xp",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "75",
                "endOffset": "14",
                "startLine": "75",
                "startOffset": "12"
            },
            {
                "src": "            if instance.get_instance().get_workflow_sdis() == Instance.WF_SDIS:"
            }
        ],
        "key": "AXcqnsBo-n2LilEsa3Xq",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "76",
                "endOffset": "18",
                "startLine": "76",
                "startOffset": "16"
            },
            {
                "src": "                if not SDISAvis.objects.filter(authorization=instance).exists():"
            }
        ],
        "key": "AXcqnsBo-n2LilEsa3Xr",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "84",
                "endOffset": "14",
                "startLine": "84",
                "startOffset": "12"
            },
            {
                "src": "            if not DDSPAvis.objects.filter(authorization=instance).exists():"
            }
        ],
        "key": "AXcqnsBo-n2LilEsa3Xs",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "92",
                "endOffset": "14",
                "startLine": "92",
                "startOffset": "12"
            },
            {
                "src": "            if not CGAvis.objects.filter(authorization=instance).exists():"
            }
        ],
        "key": "AXcqnsBo-n2LilEsa3Xt",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "202",
                "endOffset": "17",
                "startLine": "202",
                "startOffset": "12"
            },
            {
                "src": "            raise"
            }
        ],
        "key": "AXcqnr_t-n2LilEsa3Xl",
        "msg": "Add logic to this except clause or eliminate it and rethrow the exception automatically.",
        "rule": "python:S2737",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "8",
                "endOffset": "25",
                "startLine": "8",
                "startOffset": "0"
            },
            {
                "src": "from ..factories import *"
            }
        ],
        "key": "AXcqnr3--n2LilEsa3XX",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "8",
                "endOffset": "25",
                "startLine": "8",
                "startOffset": "0"
            },
            {
                "src": "from ..factories import *"
            }
        ],
        "key": "AXcqnr7v-n2LilEsa3Xe",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "7",
                "endOffset": "25",
                "startLine": "7",
                "startOffset": "0"
            },
            {
                "src": "from ..factories import *"
            }
        ],
        "key": "AXcqnr6j-n2LilEsa3Xb",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "6",
                "endOffset": "38",
                "startLine": "6",
                "startOffset": "0"
            },
            {
                "src": "from administration.factories import *"
            }
        ],
        "key": "AXcqnr8_-n2LilEsa3Xg",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "10",
                "endOffset": "25",
                "startLine": "10",
                "startOffset": "0"
            },
            {
                "src": "from ..factories import *"
            }
        ],
        "key": "AXcqnr8_-n2LilEsa3Xh",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "82",
                "endOffset": "14",
                "startLine": "82",
                "startOffset": "8"
            },
            {
                "src": "        except:"
            }
        ],
        "key": "AXcqnr8_-n2LilEsa3Xi",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "7",
                "endOffset": "25",
                "startLine": "7",
                "startOffset": "0"
            },
            {
                "src": "from ..factories import *"
            }
        ],
        "key": "AXcqnr57-n2LilEsa3Xa",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "7",
                "endOffset": "38",
                "startLine": "7",
                "startOffset": "0"
            },
            {
                "src": "from administration.factories import *"
            }
        ],
        "key": "AXcqnr4z-n2LilEsa3XY",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "9",
                "endOffset": "25",
                "startLine": "9",
                "startOffset": "0"
            },
            {
                "src": "from ..factories import *"
            }
        ],
        "key": "AXcqnr4z-n2LilEsa3XZ",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "7",
                "endOffset": "25",
                "startLine": "7",
                "startOffset": "0"
            },
            {
                "src": "from ..factories import *"
            }
        ],
        "key": "AXcqnr8P-n2LilEsa3Xf",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "7",
                "endOffset": "38",
                "startLine": "7",
                "startOffset": "0"
            },
            {
                "src": "from administration.factories import *"
            }
        ],
        "key": "AXcqnr7G-n2LilEsa3Xc",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "9",
                "endOffset": "25",
                "startLine": "9",
                "startOffset": "0"
            },
            {
                "src": "from ..factories import *"
            }
        ],
        "key": "AXcqnr7G-n2LilEsa3Xd",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "4",
                "endOffset": "20",
                "startLine": "4",
                "startOffset": "0"
            },
            {
                "src": "from .views import *"
            }
        ],
        "key": "AXcqnsA3-n2LilEsa3Xm",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "6",
                "endOffset": "22",
                "startLine": "6",
                "startOffset": "0"
            },
            {
                "src": "from ..models import *"
            }
        ],
        "key": "AXcqnroX-n2LilEsa3WE",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "20",
                "endOffset": "20",
                "startLine": "20",
                "startOffset": "8"
            },
            {
                "src": "    def get_queryset(self):"
            }
        ],
        "key": "AXcqnroX-n2LilEsa3WF",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 23 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "10",
                "endOffset": "21",
                "startLine": "10",
                "startOffset": "0"
            },
            {
                "src": "from ..forms import *"
            }
        ],
        "key": "AXcqnrr1-n2LilEsa3WO",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "11",
                "endOffset": "22",
                "startLine": "11",
                "startOffset": "0"
            },
            {
                "src": "from ..models import *"
            }
        ],
        "key": "AXcqnrr1-n2LilEsa3WP",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "10",
                "endOffset": "21",
                "startLine": "10",
                "startOffset": "0"
            },
            {
                "src": "from ..forms import *"
            }
        ],
        "key": "AXcqnrsY-n2LilEsa3WQ",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "11",
                "endOffset": "22",
                "startLine": "11",
                "startOffset": "0"
            },
            {
                "src": "from ..models import *"
            }
        ],
        "key": "AXcqnrsY-n2LilEsa3WR",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "30",
                "endOffset": "12",
                "startLine": "30",
                "startOffset": "8"
            },
            {
                "src": "        dict = {'autorisationnm': 'anm', 'declarationnm': 'dnm', 'motorizedconcentration': 'avtmc', 'motorizedevent': 'avtm', 'motorizedrace': 'avtmcir'}"
            }
        ],
        "key": "AXcqnrsY-n2LilEsa3WS",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "6",
                "endOffset": "22",
                "startLine": "6",
                "startOffset": "0"
            },
            {
                "src": "from ..models import *"
            }
        ],
        "key": "AXcqnrrI-n2LilEsa3WM",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "19",
                "endOffset": "20",
                "startLine": "19",
                "startOffset": "8"
            },
            {
                "src": "    def get_queryset(self):"
            }
        ],
        "key": "AXcqnrrI-n2LilEsa3WN",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 23 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "10",
                "endOffset": "21",
                "startLine": "10",
                "startOffset": "0"
            },
            {
                "src": "from ..forms import *"
            }
        ],
        "key": "AXcqnrmJ-n2LilEsa3V7",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "11",
                "endOffset": "22",
                "startLine": "11",
                "startOffset": "0"
            },
            {
                "src": "from ..models import *"
            }
        ],
        "key": "AXcqnrmJ-n2LilEsa3V8",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "30",
                "endOffset": "12",
                "startLine": "30",
                "startOffset": "8"
            },
            {
                "src": "        dict = {'autorisationnm': 'anm', 'declarationnm': 'dnm', 'motorizedconcentration': 'avtmc', 'motorizedevent': 'avtm', 'motorizedrace': 'avtmcir'}"
            }
        ],
        "key": "AXcqnrmJ-n2LilEsa3V9",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "10",
                "endOffset": "21",
                "startLine": "10",
                "startOffset": "0"
            },
            {
                "src": "from ..forms import *"
            }
        ],
        "key": "AXcqnrnn-n2LilEsa3WB",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "11",
                "endOffset": "22",
                "startLine": "11",
                "startOffset": "0"
            },
            {
                "src": "from ..models import *"
            }
        ],
        "key": "AXcqnrnn-n2LilEsa3WC",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "30",
                "endOffset": "12",
                "startLine": "30",
                "startOffset": "8"
            },
            {
                "src": "        dict = {'autorisationnm': 'anm', 'declarationnm': 'dnm', 'motorizedconcentration': 'avtmc', 'motorizedevent': 'avtm', 'motorizedrace': 'avtmcir'}"
            }
        ],
        "key": "AXcqnrnn-n2LilEsa3WD",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "9",
                "endOffset": "22",
                "startLine": "9",
                "startOffset": "0"
            },
            {
                "src": "from ..models import *"
            }
        ],
        "key": "AXcqnrpH-n2LilEsa3WG",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "28",
                "endOffset": "12",
                "startLine": "28",
                "startOffset": "8"
            },
            {
                "src": "        dict = {'autorisationnm': 'anm', 'declarationnm': 'dnm', 'motorizedconcentration': 'avtmc', 'motorizedevent': 'avtm', 'motorizedrace': 'avtmcir'}"
            }
        ],
        "key": "AXcqnrpH-n2LilEsa3WH",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "13",
                "endOffset": "21",
                "startLine": "13",
                "startOffset": "0"
            },
            {
                "src": "from ..forms import *"
            }
        ],
        "key": "AXcqnrnA-n2LilEsa3V-",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "14",
                "endOffset": "22",
                "startLine": "14",
                "startOffset": "0"
            },
            {
                "src": "from ..models import *"
            }
        ],
        "key": "AXcqnrnA-n2LilEsa3V_",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "33",
                "endOffset": "12",
                "startLine": "33",
                "startOffset": "8"
            },
            {
                "src": "        dict = {'autorisationnm': 'anm', 'declarationnm': 'dnm', 'motorizedconcentration': 'avtmc', 'motorizedevent': 'avtm', 'motorizedrace': 'avtmcir'}"
            }
        ],
        "key": "AXcqnrnA-n2LilEsa3WA",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "9",
                "endOffset": "22",
                "startLine": "9",
                "startOffset": "0"
            },
            {
                "src": "from ..models import *"
            }
        ],
        "key": "AXcqnrqc-n2LilEsa3WK",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "28",
                "endOffset": "12",
                "startLine": "28",
                "startOffset": "8"
            },
            {
                "src": "        dict = {'autorisationnm': 'anm', 'declarationnm': 'dnm', 'motorizedconcentration': 'avtmc', 'motorizedevent': 'avtm', 'motorizedrace': 'avtmcir'}"
            }
        ],
        "key": "AXcqnrqc-n2LilEsa3WL",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "10",
                "endOffset": "21",
                "startLine": "10",
                "startOffset": "0"
            },
            {
                "src": "from ..forms import *"
            }
        ],
        "key": "AXcqnrlf-n2LilEsa3V4",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "11",
                "endOffset": "22",
                "startLine": "11",
                "startOffset": "0"
            },
            {
                "src": "from ..models import *"
            }
        ],
        "key": "AXcqnrlf-n2LilEsa3V5",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "30",
                "endOffset": "12",
                "startLine": "30",
                "startOffset": "8"
            },
            {
                "src": "        dict = {'autorisationnm': 'anm', 'declarationnm': 'dnm', 'motorizedconcentration': 'avtmc', 'motorizedevent': 'avtm', 'motorizedrace': 'avtmcir'}"
            }
        ],
        "key": "AXcqnrlf-n2LilEsa3V6",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "9",
                "endOffset": "22",
                "startLine": "9",
                "startOffset": "0"
            },
            {
                "src": "from ..models import *"
            }
        ],
        "key": "AXcqnrp5-n2LilEsa3WI",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "27",
                "endOffset": "12",
                "startLine": "27",
                "startOffset": "8"
            },
            {
                "src": "        dict = {'autorisationnm': 'anm', 'declarationnm': 'dnm', 'motorizedconcentration': 'avtmc', 'motorizedevent': 'avtm', 'motorizedrace': 'avtmcir'}"
            }
        ],
        "key": "AXcqnrp5-n2LilEsa3WJ",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "68",
                "endOffset": "14",
                "startLine": "68",
                "startOffset": "12"
            },
            {
                "src": "            if cleaned_data['tabs'] == [str(tab.id) for tab in self.initial['tabs']]:"
            }
        ],
        "key": "AXcqnonG-n2LilEsa23B",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "11",
                "endOffset": "9",
                "startLine": "11",
                "startOffset": "4"
            },
            {
                "src": "    Panel = apps.get_model('aide', 'HelpAccordionPanel')"
            }
        ],
        "key": "AXcqnoen-n2LilEsa22k",
        "msg": "Rename this local variable \\Panel\\ to match the regular expression ^[_a-z][a-z0-9_]*$.",
        "rule": "python:S117",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "12",
                "endOffset": "13",
                "startLine": "12",
                "startOffset": "4"
            },
            {
                "src": "    PanelTabs = apps.get_model('aide', 'PanelTabs')"
            }
        ],
        "key": "AXcqnoen-n2LilEsa22l",
        "msg": "Rename this local variable \\PanelTabs\\ to match the regular expression ^[_a-z][a-z0-9_]*$.",
        "rule": "python:S117",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "25",
                "endOffset": "28",
                "startLine": "25",
                "startOffset": "4"
            },
            {
                "src": "def check_affichage_elements(user, query):"
            }
        ],
        "key": "AXcqnolk-n2LilEsa223",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 16 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "63",
                "endOffset": "14",
                "startLine": "63",
                "startOffset": "4"
            },
            {
                "src": "def check_page(user, page):"
            }
        ],
        "key": "AXcqnolk-n2LilEsa224",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 20 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "79",
                "endOffset": "14",
                "startLine": "79",
                "startOffset": "12"
            },
            {
                "src": "            if not bool(set(user_groupes).intersection(set(help_groupes))):"
            }
        ],
        "key": "AXcqnolk-n2LilEsa22z",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "83",
                "endOffset": "14",
                "startLine": "83",
                "startOffset": "12"
            },
            {
                "src": "            if not bool(set(user_roles).intersection(set(help_roles))):"
            }
        ],
        "key": "AXcqnolk-n2LilEsa220",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "87",
                "endOffset": "14",
                "startLine": "87",
                "startOffset": "12"
            },
            {
                "src": "            if user_departement not in departements:"
            }
        ],
        "key": "AXcqnolk-n2LilEsa221",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "93",
                "endOffset": "13",
                "startLine": "93",
                "startOffset": "4"
            },
            {
                "src": "def page_aide(request, path, pk=None):"
            }
        ],
        "key": "AXcqnolk-n2LilEsa225",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 35 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "101",
                "endOffset": "10",
                "startLine": "101",
                "startOffset": "8"
            },
            {
                "src": "        if 'recherche' in request.POST and request.POST['recherche']:"
            }
        ],
        "key": "AXcqnolk-n2LilEsa222",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "156",
                "endOffset": "10",
                "startLine": "156",
                "startOffset": "4"
            },
            {
                "src": "    except:"
            }
        ],
        "key": "AXcqnolk-n2LilEsa227",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "177",
                "endOffset": "14",
                "startLine": "177",
                "startOffset": "8"
            },
            {
                "src": "        except:"
            }
        ],
        "key": "AXcqnolk-n2LilEsa228",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "224",
                "endOffset": "21",
                "startLine": "224",
                "startOffset": "4"
            },
            {
                "src": "def AjoutVuePanelAjax(request, pk=None):"
            }
        ],
        "key": "AXcqnolk-n2LilEsa229",
        "msg": "Rename function \\AjoutVuePanelAjax\\ to match the regular expression ^[a-z_][a-z0-9_]*$.",
        "rule": "python:S1542",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "16",
                "endOffset": "11",
                "startLine": "16",
                "startOffset": "4"
            },
            {
                "src": "def demande(request):"
            }
        ],
        "key": "AXcqnomO-n2LilEsa23A",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 49 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "40",
                "endOffset": "19",
                "startLine": "40",
                "startOffset": "12"
            },
            {
                "src": "            content = Bs(demande.contenu, \\html.parser\\)"
            }
        ],
        "key": "AXcqnomO-n2LilEsa22-",
        "msg": "Remove the unused local variable \\content\\.",
        "rule": "python:S1481",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "41",
                "endOffset": "15",
                "startLine": "41",
                "startOffset": "12"
            },
            {
                "src": "            url = 'https://' + Site.objects.get_current().domain + '/admin/aide/demande/' + str(demande.pk) + '/change/'"
            }
        ],
        "key": "AXcqnomO-n2LilEsa22_",
        "msg": "Remove the unused local variable \\url\\.",
        "rule": "python:S1481",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "70",
                "endOffset": "14",
                "startLine": "70",
                "startOffset": "12"
            },
            {
                "src": "            if hasattr(self, 'detail_serializer_class'):"
            }
        ],
        "key": "AXcqnsHw-n2LilEsa3YA",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "73",
                "endOffset": "14",
                "startLine": "73",
                "startOffset": "12"
            },
            {
                "src": "            if hasattr(self, 'rendre_serializer_class'):"
            }
        ],
        "key": "AXcqnsHw-n2LilEsa3YB",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "129",
                "endOffset": "14",
                "startLine": "129",
                "startOffset": "8"
            },
            {
                "src": "        except:"
            }
        ],
        "key": "AXcqnsHw-n2LilEsa3YC",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "56",
                "endOffset": "14",
                "startLine": "56",
                "startOffset": "12"
            },
            {
                "src": "            if hasattr(self, 'detail_serializer_class'):"
            }
        ],
        "key": "AXcqnsGV-n2LilEsa3X1",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "215",
                "endOffset": "12",
                "startLine": "215",
                "startOffset": "8"
            },
            {
                "src": "        eval = manif.rnrevaluation"
            }
        ],
        "key": "AXcqnsHO-n2LilEsa3X9",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "229",
                "endOffset": "12",
                "startLine": "229",
                "startOffset": "8"
            },
            {
                "src": "        eval = manif.n2kevaluation"
            }
        ],
        "key": "AXcqnsHP-n2LilEsa3X-",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "60",
                "endOffset": "14",
                "startLine": "60",
                "startOffset": "12"
            },
            {
                "src": "            if hasattr(self, 'detail_serializer_class'):"
            }
        ],
        "key": "AXcqnsIV-n2LilEsa3YD",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "71",
                "endOffset": "14",
                "startLine": "71",
                "startOffset": "12"
            },
            {
                "src": "            if hasattr(self, 'detail_serializer_class'):"
            }
        ],
        "key": "AXcqnsGy-n2LilEsa3X3",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "74",
                "endOffset": "14",
                "startLine": "74",
                "startOffset": "12"
            },
            {
                "src": "            if hasattr(self, 'rendre_serializer_class'):"
            }
        ],
        "key": "AXcqnsGy-n2LilEsa3X4",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "131",
                "endOffset": "14",
                "startLine": "131",
                "startOffset": "8"
            },
            {
                "src": "        except:"
            }
        ],
        "key": "AXcqnsGy-n2LilEsa3X6",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "22",
                "endOffset": "23",
                "startLine": "22",
                "startOffset": "6"
            },
            {
                "src": "class Circuit_EDSRTests(TestCase):"
            }
        ],
        "key": "AXcqnqSm-n2LilEsa3I0",
        "msg": "Rename class \\Circuit_EDSRTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "96",
                "endOffset": "25",
                "startLine": "96",
                "startOffset": "8"
            },
            {
                "src": "    def test_Circuit_EDSR(self):"
            }
        ],
        "key": "AXcqnqSm-n2LilEsa3I1",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 65 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "185",
                "endOffset": "22",
                "startLine": "185",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqSm-n2LilEsa3I4",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "189",
                "endOffset": "22",
                "startLine": "189",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqSm-n2LilEsa3I5",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "193",
                "endOffset": "22",
                "startLine": "193",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqSm-n2LilEsa3I6",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "197",
                "endOffset": "22",
                "startLine": "197",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqSm-n2LilEsa3I7",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "201",
                "endOffset": "22",
                "startLine": "201",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqSm-n2LilEsa3I8",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "205",
                "endOffset": "22",
                "startLine": "205",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqSm-n2LilEsa3I9",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "209",
                "endOffset": "22",
                "startLine": "209",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqSm-n2LilEsa3I-",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "22",
                "endOffset": "27",
                "startLine": "22",
                "startOffset": "6"
            },
            {
                "src": "class Circuit_GGD_EDSRTests(TestCase):"
            }
        ],
        "key": "AXcqnqTu-n2LilEsa3JO",
        "msg": "Rename class \\Circuit_GGD_EDSRTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "96",
                "endOffset": "29",
                "startLine": "96",
                "startOffset": "8"
            },
            {
                "src": "    def test_Circuit_GGD_EDSR(self):"
            }
        ],
        "key": "AXcqnqTu-n2LilEsa3JP",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 66 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "185",
                "endOffset": "22",
                "startLine": "185",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqTu-n2LilEsa3JS",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "189",
                "endOffset": "22",
                "startLine": "189",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqTu-n2LilEsa3JT",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "193",
                "endOffset": "22",
                "startLine": "193",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqTu-n2LilEsa3JU",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "197",
                "endOffset": "22",
                "startLine": "197",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqTu-n2LilEsa3JV",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "201",
                "endOffset": "22",
                "startLine": "201",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqTu-n2LilEsa3JW",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "205",
                "endOffset": "22",
                "startLine": "205",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqTu-n2LilEsa3JX",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "209",
                "endOffset": "22",
                "startLine": "209",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqTu-n2LilEsa3JY",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "22",
                "endOffset": "30",
                "startLine": "22",
                "startOffset": "6"
            },
            {
                "src": "class Circuit_GGD_SUBEDSRTests(TestCase):"
            }
        ],
        "key": "AXcqnqP2-n2LilEsa3IG",
        "msg": "Rename class \\Circuit_GGD_SUBEDSRTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "96",
                "endOffset": "32",
                "startLine": "96",
                "startOffset": "8"
            },
            {
                "src": "    def test_Circuit_GGD_SUBEDSR(self):"
            }
        ],
        "key": "AXcqnqP2-n2LilEsa3IH",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 65 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "185",
                "endOffset": "22",
                "startLine": "185",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqP2-n2LilEsa3IK",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "189",
                "endOffset": "22",
                "startLine": "189",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqP2-n2LilEsa3IL",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "193",
                "endOffset": "22",
                "startLine": "193",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqP2-n2LilEsa3IM",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "197",
                "endOffset": "22",
                "startLine": "197",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqP2-n2LilEsa3IN",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "201",
                "endOffset": "22",
                "startLine": "201",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqP2-n2LilEsa3IO",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "205",
                "endOffset": "22",
                "startLine": "205",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqP2-n2LilEsa3IP",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "209",
                "endOffset": "22",
                "startLine": "209",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnqP2-n2LilEsa3IQ",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "24",
                "endOffset": "34",
                "startLine": "24",
                "startOffset": "6"
            },
            {
                "src": "class InstructionCircuit_EDSRTests(StaticLiveServerTestCase):"
            }
        ],
        "key": "AXcqnqRQ-n2LilEsa3Ik",
        "msg": "Rename class \\InstructionCircuit_EDSRTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "148",
                "endOffset": "25",
                "startLine": "148",
                "startOffset": "8"
            },
            {
                "src": "    def test_Circuit_EDSR(self):"
            }
        ],
        "key": "AXcqnqRQ-n2LilEsa3Il",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 26 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "24",
                "endOffset": "38",
                "startLine": "24",
                "startOffset": "6"
            },
            {
                "src": "class InstructionCircuit_GGD_EDSRTests(StaticLiveServerTestCase):"
            }
        ],
        "key": "AXcqnqQg-n2LilEsa3IW",
        "msg": "Rename class \\InstructionCircuit_GGD_EDSRTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "149",
                "endOffset": "29",
                "startLine": "149",
                "startOffset": "8"
            },
            {
                "src": "    def test_Circuit_GGD_EDSR(self):"
            }
        ],
        "key": "AXcqnqQg-n2LilEsa3IX",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 26 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "24",
                "endOffset": "41",
                "startLine": "24",
                "startOffset": "6"
            },
            {
                "src": "class InstructionCircuit_GGD_SUBEDSRTests(StaticLiveServerTestCase):"
            }
        ],
        "key": "AXcqnqUn-n2LilEsa3Jf",
        "msg": "Rename class \\InstructionCircuit_GGD_SUBEDSRTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "149",
                "endOffset": "32",
                "startLine": "149",
                "startOffset": "8"
            },
            {
                "src": "    def test_Circuit_GGD_SUBEDSR(self):"
            }
        ],
        "key": "AXcqnqUn-n2LilEsa3Jg",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 26 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "4",
                "endOffset": "20",
                "startLine": "4",
                "startOffset": "0"
            },
            {
                "src": "from .views import *"
            }
        ],
        "key": "AXcqnqbd-n2LilEsa3Ka",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "118",
                "endOffset": "12",
                "startLine": "118",
                "startOffset": "8"
            },
            {
                "src": "        dict = {'autorisationnm': 'anm', 'declarationnm': 'dnm', 'motorizedconcentration': 'avtmc', 'motorizedevent': 'avtm', 'motorizedrace': 'avtmcir'}"
            }
        ],
        "key": "AXcqnqaP-n2LilEsa3KZ",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "43",
                "endOffset": "19",
                "startLine": "43",
                "startOffset": "8"
            },
            {
                "src": "    def create_user(self, username, area, role, record=True, return_data_on_failure=False):"
            }
        ],
        "key": "AXcqnsiT-n2LilEsa3af",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 30 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "64",
                "endOffset": "18",
                "startLine": "64",
                "startOffset": "12"
            },
            {
                "src": "            except:"
            }
        ],
        "key": "AXcqnsiT-n2LilEsa3ag",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "90",
                "endOffset": "14",
                "startLine": "90",
                "startOffset": "8"
            },
            {
                "src": "        except:"
            }
        ],
        "key": "AXcqnsiT-n2LilEsa3ah",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "129",
                "endOffset": "14",
                "startLine": "129",
                "startOffset": "8"
            },
            {
                "src": "        except:"
            }
        ],
        "key": "AXcqnsiT-n2LilEsa3aj",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "5",
                "endOffset": "34",
                "startLine": "5",
                "startOffset": "0"
            },
            {
                "src": "from organisateurs.models import *"
            }
        ],
        "key": "AXcqnsj4-n2LilEsa3ao",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "14",
                "endOffset": "21",
                "startLine": "14",
                "startOffset": "8"
            },
            {
                "src": "    def add_arguments(self, parser):"
            }
        ],
        "key": "AXcqnshs-n2LilEsa3ad",
        "msg": "Add a nested comment explaining why this method is empty, or complete the implementation.",
        "rule": "python:S1186",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "60",
                "endOffset": "55",
                "startLine": "60",
                "startOffset": "50"
            },
            {
                "src": "        response = requests.get(login_url, verify=False)"
            }
        ],
        "key": "AXcqnsja-n2LilEsa3am",
        "msg": "Enable server certificate validation on this SSL/TLS connection.",
        "rule": "python:S4830",
        "type": "VULNERABILITY"
    },
    {
        "code": [
            {
                "endLine": "62",
                "endOffset": "55",
                "startLine": "62",
                "startOffset": "50"
            },
            {
                "src": "        response = requests.get(error_url, verify=False)"
            }
        ],
        "key": "AXcqnsja-n2LilEsa3an",
        "msg": "Enable server certificate validation on this SSL/TLS connection.",
        "rule": "python:S4830",
        "type": "VULNERABILITY"
    },
    {
        "code": [
            {
                "endLine": "24",
                "endOffset": "16",
                "startLine": "24",
                "startOffset": "12"
            },
            {
                "src": "            beta = \\\\"
            }
        ],
        "key": "AXcqnsiy-n2LilEsa3al",
        "msg": "Remove the unused local variable \\beta\\.",
        "rule": "python:S1481",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "51",
                "endOffset": "14",
                "startLine": "51",
                "startOffset": "8"
            },
            {
                "src": "        nowfmt = now.strftime"
            }
        ],
        "key": "AXcqntBy-n2LilEsa3df",
        "msg": "Remove the unused local variable \\nowfmt\\.",
        "rule": "python:S1481",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "24",
                "endOffset": "8",
                "startLine": "24",
                "startOffset": "4"
            },
            {
                "src": "    pass"
            }
        ],
        "key": "AXcqntBA-n2LilEsa3dW",
        "msg": "Remove this unneeded \\pass\\.",
        "rule": "python:S2772",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "399",
                "endOffset": "59",
                "startLine": "399",
                "startOffset": "57"
            },
            {
                "src": "    DATABASES = {k: v for k, v in DATABASES.items() if k is 'default'}"
            }
        ],
        "key": "AXcqntBA-n2LilEsa3de",
        "msg": "Replace this \\is\\ operator with \\==\\; identity operator is not reliable here.",
        "rule": "python:S5795",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "15",
                "endOffset": "8",
                "startLine": "15",
                "startOffset": "4"
            },
            {
                "src": "    pass"
            }
        ],
        "key": "AXcqntCh-n2LilEsa3dg",
        "msg": "Remove this unneeded \\pass\\.",
        "rule": "python:S2772",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "20",
                "endOffset": "10",
                "startLine": "20",
                "startOffset": "8"
            },
            {
                "src": "        if not os.path.exists(value.path):"
            }
        ],
        "key": "AXcqnodc-n2LilEsa22e",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "21",
                "endOffset": "16",
                "startLine": "21",
                "startOffset": "8"
            },
            {
                "src": "    def __call__(self, request):"
            }
        ],
        "key": "AXcqnoeE-n2LilEsa22j",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 76 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "65",
                "endOffset": "22",
                "startLine": "65",
                "startOffset": "20"
            },
            {
                "src": "                    if Manif.objects.filter(pk=url[3]).exists():"
            }
        ],
        "key": "AXcqnoeE-n2LilEsa22f",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "69",
                "endOffset": "18",
                "startLine": "69",
                "startOffset": "16"
            },
            {
                "src": "                if len(url) &gt; 2 and url[2].isdecimal():"
            }
        ],
        "key": "AXcqnoeE-n2LilEsa22g",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "80",
                "endOffset": "18",
                "startLine": "80",
                "startOffset": "16"
            },
            {
                "src": "                if not (len(url) &gt; 1 and url[2] in ['login', 'confirm-email', 'email_confirmed', 'inactive']) and not (len(url) &gt; 2 and url[2] == 'password' and len(url) &gt; 3 and url[3] == \\reset\\):"
            }
        ],
        "key": "AXcqnoeE-n2LilEsa22h",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "85",
                "endOffset": "18",
                "startLine": "85",
                "startOffset": "16"
            },
            {
                "src": "                if url[1] in ['messagerie', 'instructions']:"
            }
        ],
        "key": "AXcqnoeE-n2LilEsa22i",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "30",
                "endOffset": "48",
                "startLine": "30",
                "startOffset": "8"
            },
            {
                "src": "        return super().__init__(*args, **kwargs)"
            }
        ],
        "key": "AXcqnocF-n2LilEsa22c",
        "msg": "Remove this return value.",
        "rule": "python:S2734",
        "type": "BUG"
    },
    {
        "code": [
            {
                "endLine": "135",
                "endOffset": "18",
                "startLine": "135",
                "startOffset": "16"
            },
            {
                "src": "                if group.name == \\Instructeurs\\ or \\\\"
            }
        ],
        "key": "AXcqnocF-n2LilEsa22X",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "171",
                "endOffset": "14",
                "startLine": "171",
                "startOffset": "12"
            },
            {
                "src": "            if obj.organisateur.structure.manifs.filter(instruction__isnull=False).exists():"
            }
        ],
        "key": "AXcqnocF-n2LilEsa22Y",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "172",
                "endOffset": "18",
                "startLine": "172",
                "startOffset": "16"
            },
            {
                "src": "                if not request.user.is_superuser and \\Administrateurs techniques\\ not in request.user.groups.values_list('name', flat=True):"
            }
        ],
        "key": "AXcqnocF-n2LilEsa22Z",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "176",
                "endOffset": "14",
                "startLine": "176",
                "startOffset": "12"
            },
            {
                "src": "            if not request.user.is_superuser and \\Administrateurs techniques\\ not in request.user.groups.values_list('name', flat=True):"
            }
        ],
        "key": "AXcqnocF-n2LilEsa22a",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "197",
                "endOffset": "14",
                "startLine": "197",
                "startOffset": "12"
            },
            {
                "src": "            if hasattr(form.base_fields, 'default_instance'):"
            }
        ],
        "key": "AXcqnocF-n2LilEsa22b",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "25",
                "endOffset": "43",
                "startLine": "25",
                "startOffset": "0"
            },
            {
                "src": "from administration.models.service import *"
            }
        ],
        "key": "AXcqnobW-n2LilEsa22T",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "61",
                "endOffset": "14",
                "startLine": "61",
                "startOffset": "12"
            },
            {
                "src": "            if User.objects.filter(username__iexact=uname):"
            }
        ],
        "key": "AXcqnobW-n2LilEsa22R",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "68",
                "endOffset": "14",
                "startLine": "68",
                "startOffset": "12"
            },
            {
                "src": "            if cleaned_data['is_active']:"
            }
        ],
        "key": "AXcqnobW-n2LilEsa22S",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "213",
                "endOffset": "14",
                "startLine": "213",
                "startOffset": "8"
            },
            {
                "src": "        except:"
            }
        ],
        "key": "AXcqnobW-n2LilEsa22U",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "417",
                "endOffset": "14",
                "startLine": "417",
                "startOffset": "8"
            },
            {
                "src": "        except:"
            }
        ],
        "key": "AXcqnobW-n2LilEsa22V",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "26",
                "endOffset": "14",
                "startLine": "26",
                "startOffset": "8"
            },
            {
                "src": "        except:"
            }
        ],
        "key": "AXcqnocy-n2LilEsa22d",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "31",
                "endOffset": "14",
                "startLine": "31",
                "startOffset": "8"
            },
            {
                "src": "    def handle(self, *args, **options):"
            }
        ],
        "key": "AXcqnn3P-n2LilEsa2yt",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 65 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "115",
                "endOffset": "26",
                "startLine": "115",
                "startOffset": "20"
            },
            {
                "src": "                    except:"
            }
        ],
        "key": "AXcqnn3P-n2LilEsa2yv",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "119",
                "endOffset": "18",
                "startLine": "119",
                "startOffset": "12"
            },
            {
                "src": "            except:"
            }
        ],
        "key": "AXcqnn3P-n2LilEsa2yu",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "25",
                "endOffset": "14",
                "startLine": "25",
                "startOffset": "8"
            },
            {
                "src": "    def handle(self, *args, **options):"
            }
        ],
        "key": "AXcqnn8q-n2LilEsa2y6",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 122 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "14",
                "endOffset": "14",
                "startLine": "14",
                "startOffset": "8"
            },
            {
                "src": "    def handle(self, *args, **options):"
            }
        ],
        "key": "AXcqnn6e-n2LilEsa2y3",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 32 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "32",
                "endOffset": "24",
                "startLine": "32",
                "startOffset": "16"
            },
            {
                "src": "                resolver = dns.resolver"
            }
        ],
        "key": "AXcqnn2h-n2LilEsa2ys",
        "msg": "Remove the unused local variable \\resolver\\.",
        "rule": "python:S1481",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "36",
                "endOffset": "14",
                "startLine": "36",
                "startOffset": "8"
            },
            {
                "src": "    def handle(self, *args, **options):"
            }
        ],
        "key": "AXcqnn5C-n2LilEsa2yz",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 16 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "15",
                "endOffset": "14",
                "startLine": "15",
                "startOffset": "8"
            },
            {
                "src": "    def handle(self, *args, **options):"
            }
        ],
        "key": "AXcqnn-C-n2LilEsa2y-",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 18 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "17",
                "endOffset": "11",
                "startLine": "17",
                "startOffset": "8"
            },
            {
                "src": "        dir, base_filename = os.path.split(file.path)"
            }
        ],
        "key": "AXcqnn51-n2LilEsa2y0",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "48",
                "endOffset": "14",
                "startLine": "48",
                "startOffset": "8"
            },
            {
                "src": "    def handle(self, *args, **options):"
            }
        ],
        "key": "AXcqnn51-n2LilEsa2y2",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 67 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "16",
                "endOffset": "14",
                "startLine": "16",
                "startOffset": "8"
            },
            {
                "src": "    def handle(self, *args, **options):"
            }
        ],
        "key": "AXcqnn78-n2LilEsa2y5",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 30 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "28",
                "endOffset": "22",
                "startLine": "28",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnn1u-n2LilEsa2yq",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "52",
                "endOffset": "14",
                "startLine": "52",
                "startOffset": "8"
            },
            {
                "src": "        return"
            }
        ],
        "key": "AXcqnn7P-n2LilEsa2y4",
        "msg": "Remove this redundant return.",
        "rule": "python:S3626",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "35",
                "endOffset": "14",
                "startLine": "35",
                "startOffset": "8"
            },
            {
                "src": "    def handle(self, *args, **options):"
            }
        ],
        "key": "AXcqnn4E-n2LilEsa2yx",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 23 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "68",
                "endOffset": "26",
                "startLine": "68",
                "startOffset": "24"
            },
            {
                "src": "                        id = int(instance_choix) - 1"
            }
        ],
        "key": "AXcqnn4E-n2LilEsa2yy",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "77",
                "endOffset": "34",
                "startLine": "77",
                "startOffset": "28"
            },
            {
                "src": "                            future = executor.submit(change_password, page, passwd)"
            }
        ],
        "key": "AXcqnn4E-n2LilEsa2yw",
        "msg": "Remove the unused local variable \\future\\.",
        "rule": "python:S1481",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "24",
                "endOffset": "14",
                "startLine": "24",
                "startOffset": "8"
            },
            {
                "src": "    def handle(self, *args, **options):"
            }
        ],
        "key": "AXcqnnxT-n2LilEsa2ya",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 18 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "15",
                "endOffset": "14",
                "startLine": "15",
                "startOffset": "8"
            },
            {
                "src": "    def handle(self, *args, **options):"
            }
        ],
        "key": "AXcqnnzX-n2LilEsa2yn",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 43 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "48",
                "endOffset": "28",
                "startLine": "48",
                "startOffset": "24"
            },
            {
                "src": "                        type = \\action\\"
            }
        ],
        "key": "AXcqnnzX-n2LilEsa2yo",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "14",
                "endOffset": "14",
                "startLine": "14",
                "startOffset": "8"
            },
            {
                "src": "    def handle(self, *args, **options):"
            }
        ],
        "key": "AXcqnnyV-n2LilEsa2yd",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 109 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "39",
                "endOffset": "30",
                "startLine": "39",
                "startOffset": "24"
            },
            {
                "src": "                        except:"
            }
        ],
        "key": "AXcqnnyV-n2LilEsa2yf",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "69",
                "endOffset": "30",
                "startLine": "69",
                "startOffset": "24"
            },
            {
                "src": "                        except:"
            }
        ],
        "key": "AXcqnnyV-n2LilEsa2yh",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "99",
                "endOffset": "30",
                "startLine": "99",
                "startOffset": "24"
            },
            {
                "src": "                        except:"
            }
        ],
        "key": "AXcqnnyV-n2LilEsa2yj",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "122",
                "endOffset": "30",
                "startLine": "122",
                "startOffset": "24"
            },
            {
                "src": "                        except:"
            }
        ],
        "key": "AXcqnnyV-n2LilEsa2yl",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "16",
                "endOffset": "41",
                "startLine": "16",
                "startOffset": "37"
            },
            {
                "src": "        algorithm, iterations, salt, hash = user.password.split('$', 3)"
            }
        ],
        "key": "AXcqnn9a-n2LilEsa2y7",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "43",
                "endOffset": "17",
                "startLine": "43",
                "startOffset": "8"
            },
            {
                "src": "        bad_passs= 0"
            }
        ],
        "key": "AXcqnn9a-n2LilEsa2y9",
        "msg": "Remove the unused local variable \\bad_passs\\.",
        "rule": "python:S1481",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "47",
                "endOffset": "14",
                "startLine": "47",
                "startOffset": "8"
            },
            {
                "src": "        result = []"
            }
        ],
        "key": "AXcqnn9a-n2LilEsa2y8",
        "msg": "Remove the unused local variable \\result\\.",
        "rule": "python:S1481",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "25",
                "endOffset": "14",
                "startLine": "25",
                "startOffset": "8"
            },
            {
                "src": "    def handle(self, *args, **options):"
            }
        ],
        "key": "AXcqnn0U-n2LilEsa2yp",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 35 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "61",
                "endOffset": "61",
                "startLine": "61",
                "startOffset": "48"
            },
            {
                "src": "        map_fk_col = (lambda c: \\{0}_id\\.format(base_to_model).lower()"
            }
        ],
        "key": "AXcqnoSG-n2LilEsa21s",
        "msg": "Add a parameter to the parent lambda function and use variable \\base_to_model\\ as its default value; The value of \\base_to_model\\ might change at the next loop iteration.",
        "rule": "python:S1515",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "62",
                "endOffset": "47",
                "startLine": "62",
                "startOffset": "32"
            },
            {
                "src": "        if c == \\{0}_id\\.format(base_from_model).lower()"
            }
        ],
        "key": "AXcqnoSG-n2LilEsa21t",
        "msg": "Add a parameter to the parent lambda function and use variable \\base_from_model\\ as its default value; The value of \\base_from_model\\ might change at the next loop iteration.",
        "rule": "python:S1515",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "22",
                "endOffset": "13",
                "startLine": "22",
                "startOffset": "4"
            },
            {
                "src": "    FromModel = apps.get_model(from_app, from_model_name)"
            }
        ],
        "key": "AXcqnoRN-n2LilEsa21o",
        "msg": "Rename this local variable \\FromModel\\ to match the regular expression ^[_a-z][a-z0-9_]*$.",
        "rule": "python:S117",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "23",
                "endOffset": "11",
                "startLine": "23",
                "startOffset": "4"
            },
            {
                "src": "    ToModel = apps.get_model(to_app, to_model_name)"
            }
        ],
        "key": "AXcqnoRN-n2LilEsa21p",
        "msg": "Rename this local variable \\ToModel\\ to match the regular expression ^[_a-z][a-z0-9_]*$.",
        "rule": "python:S117",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "5",
                "endOffset": "25",
                "startLine": "5",
                "startOffset": "4"
            },
            {
                "src": "def remplir_tableau_roles(apps, schema_editor):"
            }
        ],
        "key": "AXcqnoQv-n2LilEsa21n",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 30 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "16",
                "endOffset": "8",
                "startLine": "16",
                "startOffset": "4"
            },
            {
                "src": "    User = apps.get_model('core', 'user')"
            }
        ],
        "key": "AXcqnoQv-n2LilEsa21m",
        "msg": "Rename this local variable \\User\\ to match the regular expression ^[_a-z][a-z0-9_]*$.",
        "rule": "python:S117",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "38",
                "endOffset": "14",
                "startLine": "38",
                "startOffset": "8"
            },
            {
                "src": "        except:"
            }
        ],
        "key": "AXcqnoar-n2LilEsa22O",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "30",
                "endOffset": "8",
                "startLine": "30",
                "startOffset": "4"
            },
            {
                "src": "    type = models.CharField(max_length=50, choices=TYPE, verbose_name='Type de consultation')"
            }
        ],
        "key": "AXcqnoZ1-n2LilEsa22N",
        "msg": "Rename field \\type\\ to prevent any misunderstanding/clash with field \\TYPE\\ defined on line 24",
        "rule": "python:S1845",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "57",
                "endOffset": "10",
                "startLine": "57",
                "startOffset": "4"
            },
            {
                "src": "    status = models.SmallIntegerField(choices=STATUS, default=NORMAL, verbose_name=\\Statut\\)"
            }
        ],
        "key": "AXcqnoZQ-n2LilEsa22K",
        "msg": "Rename field \\status\\ to prevent any misunderstanding/clash with field \\STATUS\\ defined on line 52",
        "rule": "python:S1845",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "114",
                "endOffset": "16",
                "startLine": "114",
                "startOffset": "12"
            },
            {
                "src": "            list = []"
            }
        ],
        "key": "AXcqnoZQ-n2LilEsa22L",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "119",
                "endOffset": "31",
                "startLine": "119",
                "startOffset": "24"
            },
            {
                "src": "                        display = type(role_instance)._meta.object_name"
            }
        ],
        "key": "AXcqnoZQ-n2LilEsa22M",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "12",
                "endOffset": "14",
                "startLine": "12",
                "startOffset": "12"
            },
            {
                "src": "            if getattr(manif.cerfa, field.attname):"
            }
        ],
        "key": "AXcqnoXG-n2LilEsa212",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "7",
                "endOffset": "14",
                "startLine": "7",
                "startOffset": "4"
            },
            {
                "src": "def movetocore(app_liste):"
            }
        ],
        "key": "AXcqnoUi-n2LilEsa21v",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 19 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "11",
                "endOffset": "10",
                "startLine": "11",
                "startOffset": "8"
            },
            {
                "src": "        if group in user.groups.values_list('name', flat=True):"
            }
        ],
        "key": "AXcqnoVF-n2LilEsa21w",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "20",
                "endOffset": "10",
                "startLine": "20",
                "startOffset": "8"
            },
            {
                "src": "        if hasattr(obj, attr):"
            }
        ],
        "key": "AXcqnoT--n2LilEsa21u",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "19",
                "endOffset": "31",
                "startLine": "19",
                "startOffset": "6"
            },
            {
                "src": "class Circuit_OrganisateurTests(TestCase):"
            }
        ],
        "key": "AXcqnoH1-n2LilEsa20B",
        "msg": "Rename class \\Circuit_OrganisateurTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "26",
                "endOffset": "30",
                "startLine": "26",
                "startOffset": "8"
            },
            {
                "src": "    def get_login_redirect_url(self, request):"
            }
        ],
        "key": "AXcqnoAE-n2LilEsa2zC",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 16 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "38",
                "endOffset": "18",
                "startLine": "38",
                "startOffset": "16"
            },
            {
                "src": "                if not user.last_change_password or user.last_change_password &lt; date_change:"
            }
        ],
        "key": "AXcqnoAE-n2LilEsa2zB",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "74",
                "endOffset": "14",
                "startLine": "74",
                "startOffset": "8"
            },
            {
                "src": "        except:"
            }
        ],
        "key": "AXcqnoAE-n2LilEsa2zD",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "120",
                "endOffset": "18",
                "startLine": "120",
                "startOffset": "12"
            },
            {
                "src": "            except:"
            }
        ],
        "key": "AXcqnoAE-n2LilEsa2zE",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "27",
                "endOffset": "10",
                "startLine": "27",
                "startOffset": "8"
            },
            {
                "src": "        if request.subdomain:"
            }
        ],
        "key": "AXcqnoFh-n2LilEsa2zS",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "61",
                "endOffset": "8",
                "startLine": "61",
                "startOffset": "4"
            },
            {
                "src": "    hash = hashlib.md5()"
            }
        ],
        "key": "AXcqnoBM-n2LilEsa2zF",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "60",
                "endOffset": "12",
                "startLine": "60",
                "startOffset": "8"
            },
            {
                "src": "        hash = hashlib.sha512(salt.encode() + password).digest()"
            }
        ],
        "key": "AXcqnoC_-n2LilEsa2zL",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "62",
                "endOffset": "22",
                "startLine": "62",
                "startOffset": "12"
            },
            {
                "src": "        for _iteration in range(iterations):"
            }
        ],
        "key": "AXcqnoC_-n2LilEsa2zK",
        "msg": "Remove the unused local variable \\_iteration\\.",
        "rule": "python:S1481",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "76",
                "endOffset": "41",
                "startLine": "76",
                "startOffset": "37"
            },
            {
                "src": "        algorithm, iterations, salt, hash = encoded.split('$', 3)"
            }
        ],
        "key": "AXcqnoC_-n2LilEsa2zO",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "68",
                "endOffset": "25",
                "startLine": "68",
                "startOffset": "8"
            },
            {
                "src": "    def get_role_instance(user, role=None):"
            }
        ],
        "key": "AXcqnn_D-n2LilEsa2y_",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 36 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "66",
                "endOffset": "16",
                "startLine": "66",
                "startOffset": "12"
            },
            {
                "src": "            pass"
            }
        ],
        "key": "AXcqnoWL-n2LilEsa21y",
        "msg": "Either remove or fill this block of code.",
        "rule": "python:S108",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "12",
                "endOffset": "16",
                "startLine": "12",
                "startOffset": "4"
            },
            {
                "src": "def media_access(request, path):"
            }
        ],
        "key": "AXcqnoWp-n2LilEsa211",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 39 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "46",
                "endOffset": "18",
                "startLine": "46",
                "startOffset": "16"
            },
            {
                "src": "                if AccessToken.objects.filter(token=auth[1]).exists():"
            }
        ],
        "key": "AXcqnoWp-n2LilEsa210",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "160",
                "endOffset": "22",
                "startLine": "160",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnoVn-n2LilEsa21x",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "125",
                "endOffset": "12",
                "startLine": "125",
                "startOffset": "8"
            },
            {
                "src": "        dict = {'autorisationnm': 'anm', 'declarationnm': 'dnm', 'motorizedconcentration': 'avtmc', 'motorizedevent': 'avtm', 'motorizedrace': 'avtmcir'}"
            }
        ],
        "key": "AXcqns8K-n2LilEsa3cy",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "31",
                "endOffset": "13",
                "startLine": "31",
                "startOffset": "8"
            },
            {
                "src": "    def clean(self):"
            }
        ],
        "key": "AXcqnsvH-n2LilEsa3bi",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 26 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "111",
                "endOffset": "13",
                "startLine": "111",
                "startOffset": "8"
            },
            {
                "src": "    def clean(self):"
            }
        ],
        "key": "AXcqnsvH-n2LilEsa3bj",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 18 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "100",
                "endOffset": "14",
                "startLine": "100",
                "startOffset": "12"
            },
            {
                "src": "            if obj.natura2ksiteconfig.charte_dispense_acceptee:"
            }
        ],
        "key": "AXcqnsuh-n2LilEsa3bf",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "14",
                "endOffset": "32",
                "startLine": "14",
                "startOffset": "8"
            },
            {
                "src": "    def Purge_description_fields(sender, instance, raw, created, **kwargs):"
            }
        ],
        "key": "AXcqns2H-n2LilEsa3cB",
        "msg": "Rename function \\Purge_description_fields\\ to match the regular expression ^[a-z_][a-z0-9_]*$.",
        "rule": "python:S1542",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "14",
                "endOffset": "32",
                "startLine": "14",
                "startOffset": "8"
            },
            {
                "src": "    def Purge_description_fields(sender, instance, raw, created, **kwargs):"
            }
        ],
        "key": "AXcqns2H-n2LilEsa3cC",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 27 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "17",
                "endOffset": "14",
                "startLine": "17",
                "startOffset": "12"
            },
            {
                "src": "            if hasattr(instance.manif, 'n2kevaluation'):"
            }
        ],
        "key": "AXcqns2H-n2LilEsa3cA",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "24",
                "endOffset": "14",
                "startLine": "24",
                "startOffset": "8"
            },
            {
                "src": "        except:"
            }
        ],
        "key": "AXcqns1i-n2LilEsa3b9",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "46",
                "endOffset": "14",
                "startLine": "46",
                "startOffset": "8"
            },
            {
                "src": "        except:"
            }
        ],
        "key": "AXcqns1i-n2LilEsa3b-",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "68",
                "endOffset": "14",
                "startLine": "68",
                "startOffset": "8"
            },
            {
                "src": "        except:"
            }
        ],
        "key": "AXcqns1i-n2LilEsa3b_",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "20",
                "endOffset": "14",
                "startLine": "20",
                "startOffset": "8"
            },
            {
                "src": "    def handle(self, *args, **options):"
            }
        ],
        "key": "AXcqnsyN-n2LilEsa3bz",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 40 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "46",
                "endOffset": "30",
                "startLine": "46",
                "startOffset": "8"
            },
            {
                "src": "    def evaluation_rnr_requise(cls, manif):"
            }
        ],
        "key": "AXcqnsv--n2LilEsa3bo",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 31 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "75",
                "endOffset": "30",
                "startLine": "75",
                "startOffset": "8"
            },
            {
                "src": "    def evaluation_n2k_requise(cls, manif, cause):"
            }
        ],
        "key": "AXcqnsv--n2LilEsa3bp",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 117 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "113",
                "endOffset": "26",
                "startLine": "113",
                "startOffset": "24"
            },
            {
                "src": "                        if not manif.sites_natura2000.all():"
            }
        ],
        "key": "AXcqnsv--n2LilEsa3bk",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "116",
                "endOffset": "22",
                "startLine": "116",
                "startOffset": "16"
            },
            {
                "src": "                return"
            }
        ],
        "key": "AXcqnsv--n2LilEsa3bq",
        "msg": "Remove this redundant return.",
        "rule": "python:S3626",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "128",
                "endOffset": "26",
                "startLine": "128",
                "startOffset": "24"
            },
            {
                "src": "                        if not manif.sites_natura2000.all():            # la manif n'est pas sur un site n2k =&gt; next"
            }
        ],
        "key": "AXcqnsv--n2LilEsa3bl",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "131",
                "endOffset": "26",
                "startLine": "131",
                "startOffset": "24"
            },
            {
                "src": "                        if manif.emprise == EMPRISE['total']:           # la manif est en totalit\\u00e9 sur la voie publique"
            }
        ],
        "key": "AXcqnsv--n2LilEsa3bm",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "136",
                "endOffset": "22",
                "startLine": "136",
                "startOffset": "16"
            },
            {
                "src": "                return"
            }
        ],
        "key": "AXcqnsv--n2LilEsa3br",
        "msg": "Remove this redundant return.",
        "rule": "python:S3626",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "161",
                "endOffset": "22",
                "startLine": "161",
                "startOffset": "20"
            },
            {
                "src": "                    if application_criteres(decision()):"
            }
        ],
        "key": "AXcqnsv--n2LilEsa3bn",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "70",
                "endOffset": "28",
                "startLine": "70",
                "startOffset": "16"
            },
            {
                "src": "                return False"
            }
        ],
        "key": "AXcqnswk-n2LilEsa3bt",
        "msg": "Either merge this branch with the identical one on line \\68\\ or change one of the implementations.",
        "rule": "python:S1871",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "107",
                "endOffset": "29",
                "startLine": "107",
                "startOffset": "16"
            },
            {
                "src": "                return  False"
            }
        ],
        "key": "AXcqnsxG-n2LilEsa3bu",
        "msg": "Either merge this branch with the identical one on line \\105\\ or change one of the implementations.",
        "rule": "python:S1871",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "34",
                "endOffset": "18",
                "startLine": "34",
                "startOffset": "16"
            },
            {
                "src": "                if request.user.has_role('instructeur') and self.manif.instruction.get_instructeurs_prefecture(arr_wrt=True):"
            }
        ],
        "key": "AXcqns3U-n2LilEsa3cF",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "37",
                "endOffset": "14",
                "startLine": "37",
                "startOffset": "12"
            },
            {
                "src": "            if request.user == self.manif.structure.organisateur.user:"
            }
        ],
        "key": "AXcqns3U-n2LilEsa3cG",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "43",
                "endOffset": "15",
                "startLine": "43",
                "startOffset": "8"
            },
            {
                "src": "        referer = self.request.META.get('HTTP_REFERER')"
            }
        ],
        "key": "AXcqns3U-n2LilEsa3cH",
        "msg": "Remove the unused local variable \\referer\\.",
        "rule": "python:S1481",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "76",
                "endOffset": "14",
                "startLine": "76",
                "startOffset": "12"
            },
            {
                "src": "            if self.manif.cerfa.vehicules:"
            }
        ],
        "key": "AXcqns2r-n2LilEsa3cD",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "118",
                "endOffset": "14",
                "startLine": "118",
                "startOffset": "12"
            },
            {
                "src": "            if manif.cerfa.vehicules:"
            }
        ],
        "key": "AXcqns2r-n2LilEsa3cE",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "8",
                "endOffset": "13",
                "startLine": "8",
                "startOffset": "8"
            },
            {
                "src": "    def ready(self):"
            }
        ],
        "key": "AXcqnrOO-n2LilEsa3U9",
        "msg": "Add a nested comment explaining why this method is empty, or complete the implementation.",
        "rule": "python:S1186",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "27",
                "endOffset": "27",
                "startLine": "27",
                "startOffset": "26"
            },
            {
                "src": "                'fields': (('dans_calendrier', 'prive', 'cache', 'afficher_adresse_structure'))}"
            }
        ],
        "key": "AXcqnrMb-n2LilEsa3U3",
        "msg": "Remove those useless parentheses.",
        "rule": "python:S1110",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "65",
                "endOffset": "22",
                "startLine": "65",
                "startOffset": "20"
            },
            {
                "src": "                    if datetime.date.today() &gt;= date_etape.date() - datetime.timedelta(days=5):"
            }
        ],
        "key": "AXcqnrNu-n2LilEsa3U8",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "8",
                "endOffset": "31",
                "startLine": "8",
                "startOffset": "0"
            },
            {
                "src": "from evenements.models import *"
            }
        ],
        "key": "AXcqnrFN-n2LilEsa3UB",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "94",
                "endOffset": "16",
                "startLine": "94",
                "startOffset": "8"
            },
            {
                "src": "    def __init__(self, *args, **kwargs):"
            }
        ],
        "key": "AXcqnrJS-n2LilEsa3Uv",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 16 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "100",
                "endOffset": "14",
                "startLine": "100",
                "startOffset": "12"
            },
            {
                "src": "            if hasattr(kwargs['instance'], 'prive') and kwargs['instance'].prive:"
            }
        ],
        "key": "AXcqnrJS-n2LilEsa3Uq",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "101",
                "endOffset": "18",
                "startLine": "101",
                "startOffset": "16"
            },
            {
                "src": "                if 'initial' in kwargs:"
            }
        ],
        "key": "AXcqnrJS-n2LilEsa3Ur",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "116",
                "endOffset": "18",
                "startLine": "116",
                "startOffset": "16"
            },
            {
                "src": "                if not instance.natura2kdepartementconfig.pdesi:"
            }
        ],
        "key": "AXcqnrJS-n2LilEsa3Us",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "126",
                "endOffset": "14",
                "startLine": "126",
                "startOffset": "12"
            },
            {
                "src": "            if begin_date &lt; timezone.now():"
            }
        ],
        "key": "AXcqnrJS-n2LilEsa3Ut",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "275",
                "endOffset": "14",
                "startLine": "275",
                "startOffset": "12"
            },
            {
                "src": "            if Manif.objects.filter(nom=nom).exists():"
            }
        ],
        "key": "AXcqnrJS-n2LilEsa3Uu",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "19",
                "endOffset": "14",
                "startLine": "19",
                "startOffset": "8"
            },
            {
                "src": "    def handle(self, *args, **options):"
            }
        ],
        "key": "AXcqnrO8-n2LilEsa3U-",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 49 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "154",
                "endOffset": "11",
                "startLine": "154",
                "startOffset": "4"
            },
            {
                "src": "    emprise = models.SmallIntegerField(\\Emprise sur voie publique\\, choices=CHOIX_EMPRISE, default=EMPRISE['null'], blank=True)"
            }
        ],
        "key": "AXcqnrIY-n2LilEsa3Uh",
        "msg": "Rename field \\emprise\\ to prevent any misunderstanding/clash with field \\EMPRISE\\ defined on line 66",
        "rule": "python:S1845",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "448",
                "endOffset": "23",
                "startLine": "448",
                "startOffset": "8"
            },
            {
                "src": "    def get_breadcrumbs(self):"
            }
        ],
        "key": "AXcqnrIY-n2LilEsa3Uj",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 17 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "517",
                "endOffset": "20",
                "startLine": "517",
                "startOffset": "8"
            },
            {
                "src": "    def ecrire_delai(self, manif=None, all=False):"
            }
        ],
        "key": "AXcqnrIY-n2LilEsa3Uk",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 20 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "559",
                "endOffset": "29",
                "startLine": "559",
                "startOffset": "16"
            },
            {
                "src": "                return  False"
            }
        ],
        "key": "AXcqnrIY-n2LilEsa3Ul",
        "msg": "Either merge this branch with the identical one on line \\557\\ or change one of the implementations.",
        "rule": "python:S1871",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "571",
                "endOffset": "28",
                "startLine": "571",
                "startOffset": "16"
            },
            {
                "src": "                return False"
            }
        ],
        "key": "AXcqnrIY-n2LilEsa3Um",
        "msg": "Either merge this branch with the identical one on line \\569\\ or change one of the implementations.",
        "rule": "python:S1871",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "574",
                "endOffset": "23",
                "startLine": "574",
                "startOffset": "8"
            },
            {
                "src": "    def dossier_complet(self):"
            }
        ],
        "key": "AXcqnrIY-n2LilEsa3Un",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 37 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "580",
                "endOffset": "18",
                "startLine": "580",
                "startOffset": "16"
            },
            {
                "src": "                if not self.n2kevaluation.formulaire_n2k_complet():"
            }
        ],
        "key": "AXcqnrIY-n2LilEsa3Uf",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "585",
                "endOffset": "18",
                "startLine": "585",
                "startOffset": "16"
            },
            {
                "src": "                if not self.rnrevaluation.formulaire_rnr_complet():"
            }
        ],
        "key": "AXcqnrIY-n2LilEsa3Ug",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "605",
                "endOffset": "23",
                "startLine": "605",
                "startOffset": "8"
            },
            {
                "src": "    def liste_manquants(self):"
            }
        ],
        "key": "AXcqnrIY-n2LilEsa3Uo",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 19 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "666",
                "endOffset": "13",
                "startLine": "666",
                "startOffset": "8"
            },
            {
                "src": "    def cerfa(self):"
            }
        ],
        "key": "AXcqnrIY-n2LilEsa3Ui",
        "msg": "Update this function so that its implementation is not identical to get_cerfa on line 658.",
        "rule": "python:S4144",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "8",
                "endOffset": "36",
                "startLine": "8",
                "startOffset": "0"
            },
            {
                "src": "from configuration.settings import *"
            }
        ],
        "key": "AXcqnrNG-n2LilEsa3U5",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "28",
                "endOffset": "25",
                "startLine": "28",
                "startOffset": "24"
            },
            {
                "src": "    except Exception as e:"
            }
        ],
        "key": "AXcqnrNG-n2LilEsa3U6",
        "msg": "Remove the unused local variable \\e\\.",
        "rule": "python:S1481",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "47",
                "endOffset": "25",
                "startLine": "47",
                "startOffset": "24"
            },
            {
                "src": "    except Exception as e:"
            }
        ],
        "key": "AXcqnrNG-n2LilEsa3U7",
        "msg": "Remove the unused local variable \\e\\.",
        "rule": "python:S1481",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "20",
                "endOffset": "34",
                "startLine": "20",
                "startOffset": "6"
            },
            {
                "src": "class Aiguillage_OrganisateurTests(TestCase):"
            }
        ],
        "key": "AXcqnq8D-n2LilEsa3Qf",
        "msg": "Rename class \\Aiguillage_OrganisateurTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "19",
                "endOffset": "18",
                "startLine": "19",
                "startOffset": "6"
            },
            {
                "src": "class Avmt_Clonage(TestCase):"
            }
        ],
        "key": "AXcqnrA1-n2LilEsa3Sk",
        "msg": "Rename class \\Avmt_Clonage\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "34",
                "endOffset": "14",
                "startLine": "34",
                "startOffset": "12"
            },
            {
                "src": "            if int(form['emprise'].data) in [Manif.EMPRISE['hors'], Manif.EMPRISE['partiel']]:"
            }
        ],
        "key": "AXcqnq5V-n2LilEsa3PJ",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "58",
                "endOffset": "11",
                "startLine": "58",
                "startOffset": "8"
            },
            {
                "src": "    def get(self, request):"
            }
        ],
        "key": "AXcqnq4o-n2LilEsa3PI",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 36 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "12",
                "endOffset": "31",
                "startLine": "12",
                "startOffset": "0"
            },
            {
                "src": "from evenements.models import *"
            }
        ],
        "key": "AXcqnq2r-n2LilEsa3O3",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "19",
                "endOffset": "33",
                "startLine": "19",
                "startOffset": "0"
            },
            {
                "src": "from instructions.models import *"
            }
        ],
        "key": "AXcqnq58-n2LilEsa3PL",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "76",
                "endOffset": "9",
                "startLine": "74",
                "startOffset": "14"
            },
            {
                "src": "        raise Exception("
            }
        ],
        "key": "AXcqnq58-n2LilEsa3PM",
        "msg": "Replace this generic exception class with a more specific one.",
        "rule": "python:S112",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "129",
                "endOffset": "14",
                "startLine": "129",
                "startOffset": "8"
            },
            {
                "src": "        except:"
            }
        ],
        "key": "AXcqnq58-n2LilEsa3PN",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "140",
                "endOffset": "14",
                "startLine": "140",
                "startOffset": "8"
            },
            {
                "src": "    def export(request, pk, avis=None, preavis=None, preferelezip=False):"
            }
        ],
        "key": "AXcqnq58-n2LilEsa3PO",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 182 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "162",
                "endOffset": "16",
                "startLine": "162",
                "startOffset": "12"
            },
            {
                "src": "            pass"
            }
        ],
        "key": "AXcqnq58-n2LilEsa3PP",
        "msg": "Either remove or fill this block of code.",
        "rule": "python:S108",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "282",
                "endOffset": "23",
                "startLine": "282",
                "startOffset": "20"
            },
            {
                "src": "                    dir, base_filename = os.path.split(file)"
            }
        ],
        "key": "AXcqnq58-n2LilEsa3PQ",
        "msg": "Rename this variable; it shadows a builtin.",
        "rule": "python:S5806",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "349",
                "endOffset": "30",
                "startLine": "349",
                "startOffset": "24"
            },
            {
                "src": "                        except:"
            }
        ],
        "key": "AXcqnq58-n2LilEsa3PR",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "354",
                "endOffset": "34",
                "startLine": "354",
                "startOffset": "28"
            },
            {
                "src": "                            except:"
            }
        ],
        "key": "AXcqnq58-n2LilEsa3PS",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "372",
                "endOffset": "18",
                "startLine": "372",
                "startOffset": "12"
            },
            {
                "src": "            except:"
            }
        ],
        "key": "AXcqnq58-n2LilEsa3PT",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "37",
                "endOffset": "24",
                "startLine": "37",
                "startOffset": "8"
            },
            {
                "src": "    def get_context_data(self, **kwargs):"
            }
        ],
        "key": "AXcqnq39-n2LilEsa3PE",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 48 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "61",
                "endOffset": "18",
                "startLine": "61",
                "startOffset": "16"
            },
            {
                "src": "                if not self.object.n2kevaluation.formulaire_n2k_complet():"
            }
        ],
        "key": "AXcqnq39-n2LilEsa3O8",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "66",
                "endOffset": "18",
                "startLine": "66",
                "startOffset": "16"
            },
            {
                "src": "                if not self.object.rnrevaluation.formulaire_rnr_complet():"
            }
        ],
        "key": "AXcqnq39-n2LilEsa3O9",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "265",
                "endOffset": "14",
                "startLine": "265",
                "startOffset": "12"
            },
            {
                "src": "            if form.instance.sites_natura2000.all().count() == 1:"
            }
        ],
        "key": "AXcqnq39-n2LilEsa3O-",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "266",
                "endOffset": "18",
                "startLine": "266",
                "startOffset": "16"
            },
            {
                "src": "                if hasattr(form.instance, 'n2kevaluation') and not (form.instance.n2kevaluation.pourquoi_instructeur or"
            }
        ],
        "key": "AXcqnq39-n2LilEsa3O_",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "330",
                "endOffset": "16",
                "startLine": "330",
                "startOffset": "8"
            },
            {
                "src": "    def get_form(self, form_class=None):"
            }
        ],
        "key": "AXcqnq3--n2LilEsa3PF",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 20 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "355",
                "endOffset": "18",
                "startLine": "355",
                "startOffset": "16"
            },
            {
                "src": "                if form.initial[field]:"
            }
        ],
        "key": "AXcqnq39-n2LilEsa3PA",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "358",
                "endOffset": "18",
                "startLine": "358",
                "startOffset": "16"
            },
            {
                "src": "                if not form.initial[field]:"
            }
        ],
        "key": "AXcqnq39-n2LilEsa3PB",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "375",
                "endOffset": "24",
                "startLine": "375",
                "startOffset": "8"
            },
            {
                "src": "    def get_context_data(self, **kwargs):"
            }
        ],
        "key": "AXcqnq3--n2LilEsa3PG",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 19 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "454",
                "endOffset": "14",
                "startLine": "454",
                "startOffset": "12"
            },
            {
                "src": "            if not UserHelper.has_role(request.user, 'instructeur'):"
            }
        ],
        "key": "AXcqnq39-n2LilEsa3PC",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "455",
                "endOffset": "18",
                "startLine": "455",
                "startOffset": "16"
            },
            {
                "src": "                if instance.structure.organisateur.user != request.user:"
            }
        ],
        "key": "AXcqnq39-n2LilEsa3PD",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "471",
                "endOffset": "11",
                "startLine": "471",
                "startOffset": "8"
            },
            {
                "src": "    def get(self, request, *args, **kwargs):"
            }
        ],
        "key": "AXcqnq3--n2LilEsa3PH",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 31 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "12",
                "endOffset": "38",
                "startLine": "12",
                "startOffset": "0"
            },
            {
                "src": "from organisateurs.decorators import *"
            }
        ],
        "key": "AXcqnq3S-n2LilEsa3O4",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "48",
                "endOffset": "61",
                "startLine": "48",
                "startOffset": "60"
            },
            {
                "src": "        ('Calendrier', {'classes': ('collapse',), 'fields': (('registered_calendar', 'private', 'hidden', 'show_structure_address'))}),"
            }
        ],
        "key": "AXcqnpUX-n2LilEsa27a",
        "msg": "Remove those useless parentheses.",
        "rule": "python:S1110",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "75",
                "endOffset": "14",
                "startLine": "75",
                "startOffset": "8"
            },
            {
                "src": "        except:"
            }
        ],
        "key": "AXcqnpUX-n2LilEsa27b",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "96",
                "endOffset": "61",
                "startLine": "96",
                "startOffset": "60"
            },
            {
                "src": "        ('Calendrier', {'classes': ('collapse',), 'fields': (('registered_calendar', 'private', 'hidden', 'show_structure_address'))}),"
            }
        ],
        "key": "AXcqnpUX-n2LilEsa27c",
        "msg": "Remove those useless parentheses.",
        "rule": "python:S1110",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "139",
                "endOffset": "61",
                "startLine": "139",
                "startOffset": "60"
            },
            {
                "src": "        ('Calendrier', {'classes': ('collapse',), 'fields': (('registered_calendar', 'private', 'hidden', 'show_structure_address'))}),"
            }
        ],
        "key": "AXcqnpUX-n2LilEsa27d",
        "msg": "Remove those useless parentheses.",
        "rule": "python:S1110",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "199",
                "endOffset": "35",
                "startLine": "199",
                "startOffset": "34"
            },
            {
                "src": "                        'fields': (('registered_calendar', 'private', 'hidden', 'show_structure_address'))}),"
            }
        ],
        "key": "AXcqnpUX-n2LilEsa27e",
        "msg": "Remove those useless parentheses.",
        "rule": "python:S1110",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "259",
                "endOffset": "61",
                "startLine": "259",
                "startOffset": "60"
            },
            {
                "src": "        ('Calendrier', {'classes': ('collapse',), 'fields': (('registered_calendar', 'private', 'hidden', 'show_structure_address'))}),"
            }
        ],
        "key": "AXcqnpUX-n2LilEsa27f",
        "msg": "Remove those useless parentheses.",
        "rule": "python:S1110",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "312",
                "endOffset": "61",
                "startLine": "312",
                "startOffset": "60"
            },
            {
                "src": "        ('Calendrier', {'classes': ('collapse',), 'fields': (('registered_calendar', 'private', 'hidden', 'show_structure_address'))}),"
            }
        ],
        "key": "AXcqnpUX-n2LilEsa27g",
        "msg": "Remove those useless parentheses.",
        "rule": "python:S1110",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "366",
                "endOffset": "61",
                "startLine": "366",
                "startOffset": "60"
            },
            {
                "src": "        ('Calendrier', {'classes': ('collapse',), 'fields': (('registered_calendar', 'private', 'hidden', 'show_structure_address'))}),"
            }
        ],
        "key": "AXcqnpUX-n2LilEsa27h",
        "msg": "Remove those useless parentheses.",
        "rule": "python:S1110",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "9",
                "endOffset": "27",
                "startLine": "9",
                "startOffset": "0"
            },
            {
                "src": "from events.models import *"
            }
        ],
        "key": "AXcqnpVL-n2LilEsa27i",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "8",
                "endOffset": "27",
                "startLine": "8",
                "startOffset": "0"
            },
            {
                "src": "from events.models import *"
            }
        ],
        "key": "AXcqnpV8-n2LilEsa27j",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "113",
                "endOffset": "14",
                "startLine": "113",
                "startOffset": "12"
            },
            {
                "src": "            if begin_date &lt; timezone.now():"
            }
        ],
        "key": "AXcqnpSn-n2LilEsa27W",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "6",
                "endOffset": "27",
                "startLine": "6",
                "startOffset": "0"
            },
            {
                "src": "from events.models import *"
            }
        ],
        "key": "AXcqnpXO-n2LilEsa27l",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "24",
                "endOffset": "14",
                "startLine": "24",
                "startOffset": "12"
            },
            {
                "src": "            if created:"
            }
        ],
        "key": "AXcqnpXO-n2LilEsa27k",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "13",
                "endOffset": "17",
                "startLine": "13",
                "startOffset": "4"
            },
            {
                "src": "    Manifestation = apps.get_model('events', 'Manifestation')"
            }
        ],
        "key": "AXcqnpN9-n2LilEsa27L",
        "msg": "Rename this local variable \\Manifestation\\ to match the regular expression ^[_a-z][a-z0-9_]*$.",
        "rule": "python:S117",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "59",
                "endOffset": "14",
                "startLine": "59",
                "startOffset": "12"
            },
            {
                "src": "            if not self.rounds_safety:"
            }
        ],
        "key": "AXcqnpRY-n2LilEsa27T",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "39",
                "endOffset": "14",
                "startLine": "39",
                "startOffset": "12"
            },
            {
                "src": "            if self.big_budget or self.lucrative or self.big_title or self.motor_on_closed_road or self.approval_request:"
            }
        ],
        "key": "AXcqnpPw-n2LilEsa27Q",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "71",
                "endOffset": "20",
                "startLine": "71",
                "startOffset": "8"
            },
            {
                "src": "        _declaration = EventDeclarationFactory.create(manifestation=manifestation)"
            }
        ],
        "key": "AXcqnpTU-n2LilEsa27X",
        "msg": "Remove the unused local variable \\_declaration\\.",
        "rule": "python:S1481",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "3",
                "endOffset": "21",
                "startLine": "3",
                "startOffset": "0"
            },
            {
                "src": "from ..forms import *"
            }
        ],
        "key": "AXcqnpJB-n2LilEsa26-",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "4",
                "endOffset": "22",
                "startLine": "4",
                "startOffset": "0"
            },
            {
                "src": "from ..models import *"
            }
        ],
        "key": "AXcqnpJB-n2LilEsa26_",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "6",
                "endOffset": "27",
                "startLine": "6",
                "startOffset": "0"
            },
            {
                "src": "from events.models import *"
            }
        ],
        "key": "AXcqnpFJ-n2LilEsa26w",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "5",
                "endOffset": "21",
                "startLine": "5",
                "startOffset": "0"
            },
            {
                "src": "from ..forms import *"
            }
        ],
        "key": "AXcqnpKO-n2LilEsa27C",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "6",
                "endOffset": "22",
                "startLine": "6",
                "startOffset": "0"
            },
            {
                "src": "from ..models import *"
            }
        ],
        "key": "AXcqnpKO-n2LilEsa27D",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "8",
                "endOffset": "21",
                "startLine": "8",
                "startOffset": "0"
            },
            {
                "src": "from ..forms import *"
            }
        ],
        "key": "AXcqnpHL-n2LilEsa264",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "9",
                "endOffset": "22",
                "startLine": "9",
                "startOffset": "0"
            },
            {
                "src": "from ..models import *"
            }
        ],
        "key": "AXcqnpHL-n2LilEsa265",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "16",
                "endOffset": "38",
                "startLine": "16",
                "startOffset": "0"
            },
            {
                "src": "from organisateurs.decorators import *"
            }
        ],
        "key": "AXcqnpFv-n2LilEsa260",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "17",
                "endOffset": "22",
                "startLine": "17",
                "startOffset": "0"
            },
            {
                "src": "from ..models import *"
            }
        ],
        "key": "AXcqnpFv-n2LilEsa261",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "188",
                "endOffset": "14",
                "startLine": "188",
                "startOffset": "12"
            },
            {
                "src": "            if not UserHelper.has_role(request.user, 'instructeur'):"
            }
        ],
        "key": "AXcqnpFv-n2LilEsa26y",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "189",
                "endOffset": "18",
                "startLine": "189",
                "startOffset": "16"
            },
            {
                "src": "                if instance.structure.organisateur.user != request.user:"
            }
        ],
        "key": "AXcqnpFv-n2LilEsa26z",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "4",
                "endOffset": "21",
                "startLine": "4",
                "startOffset": "0"
            },
            {
                "src": "from ..forms import *"
            }
        ],
        "key": "AXcqnpHu-n2LilEsa266",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "5",
                "endOffset": "22",
                "startLine": "5",
                "startOffset": "0"
            },
            {
                "src": "from ..models import *"
            }
        ],
        "key": "AXcqnpHu-n2LilEsa267",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "4",
                "endOffset": "21",
                "startLine": "4",
                "startOffset": "0"
            },
            {
                "src": "from ..forms import *"
            }
        ],
        "key": "AXcqnpJi-n2LilEsa27A",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "5",
                "endOffset": "22",
                "startLine": "5",
                "startOffset": "0"
            },
            {
                "src": "from ..models import *"
            }
        ],
        "key": "AXcqnpJi-n2LilEsa27B",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "4",
                "endOffset": "21",
                "startLine": "4",
                "startOffset": "0"
            },
            {
                "src": "from ..forms import *"
            }
        ],
        "key": "AXcqnpGd-n2LilEsa262",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "5",
                "endOffset": "22",
                "startLine": "5",
                "startOffset": "0"
            },
            {
                "src": "from ..models import *"
            }
        ],
        "key": "AXcqnpGd-n2LilEsa263",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "8",
                "endOffset": "38",
                "startLine": "8",
                "startOffset": "0"
            },
            {
                "src": "from organisateurs.decorators import *"
            }
        ],
        "key": "AXcqnpIV-n2LilEsa268",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "9",
                "endOffset": "22",
                "startLine": "9",
                "startOffset": "0"
            },
            {
                "src": "from ..models import *"
            }
        ],
        "key": "AXcqnpIV-n2LilEsa269",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "53",
                "endOffset": "14",
                "startLine": "53",
                "startOffset": "12"
            },
            {
                "src": "            if Avis.objects.get(pk=obj.pk).preavis.all():"
            }
        ],
        "key": "AXcqnqMN-n2LilEsa3Hq",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "39",
                "endOffset": "14",
                "startLine": "39",
                "startOffset": "12"
            },
            {
                "src": "            if self.instance.service_concerne != 'cgd':"
            }
        ],
        "key": "AXcqnqMx-n2LilEsa3Hs",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "53",
                "endOffset": "10",
                "startLine": "53",
                "startOffset": "8"
            },
            {
                "src": "    def do(self):"
            }
        ],
        "key": "AXcqnqPM-n2LilEsa3H2",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 16 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "64",
                "endOffset": "18",
                "startLine": "64",
                "startOffset": "12"
            },
            {
                "src": "            except:"
            }
        ],
        "key": "AXcqnqPM-n2LilEsa3H3",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "11",
                "endOffset": "32",
                "startLine": "11",
                "startOffset": "4"
            },
            {
                "src": "def verifier_secteur_instruction(function=None, arr_wrt=False):"
            }
        ],
        "key": "AXcqnqOF-n2LilEsa3Hx",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 21 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "43",
                "endOffset": "18",
                "startLine": "43",
                "startOffset": "16"
            },
            {
                "src": "                if request.user in instruction.get_instructeurs_mairie():"
            }
        ],
        "key": "AXcqnqOF-n2LilEsa3Hw",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "131",
                "endOffset": "19",
                "startLine": "131",
                "startOffset": "8"
            },
            {
                "src": "        departement = manifestation.ville_depart.get_departement()"
            }
        ],
        "key": "AXcqnqJS-n2LilEsa3Hb",
        "msg": "Remove the unused local variable \\departement\\.",
        "rule": "python:S1481",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "427",
                "endOffset": "14",
                "startLine": "427",
                "startOffset": "12"
            },
            {
                "src": "            if self.avis:"
            }
        ],
        "key": "AXcqnqJS-n2LilEsa3Ha",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "86",
                "endOffset": "21",
                "startLine": "86",
                "startOffset": "8"
            },
            {
                "src": "    def get_avis_user(self, user):"
            }
        ],
        "key": "AXcqnqJ6-n2LilEsa3Hh",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 20 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "165",
                "endOffset": "22",
                "startLine": "165",
                "startOffset": "8"
            },
            {
                "src": "    def get_all_agents(self):"
            }
        ],
        "key": "AXcqnqJ6-n2LilEsa3Hi",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 36 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "191",
                "endOffset": "18",
                "startLine": "191",
                "startOffset": "16"
            },
            {
                "src": "                if hasattr(service.departement, 'ggd'):"
            }
        ],
        "key": "AXcqnqJ6-n2LilEsa3He",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "196",
                "endOffset": "18",
                "startLine": "196",
                "startOffset": "16"
            },
            {
                "src": "                if hasattr(service.departement, 'edsr') and avis.etat != 'demand\\u00e9':"
            }
        ],
        "key": "AXcqnqJ6-n2LilEsa3Hf",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "228",
                "endOffset": "35",
                "startLine": "228",
                "startOffset": "8"
            },
            {
                "src": "    def get_instructeurs_prefecture(self, arr_wrt):"
            }
        ],
        "key": "AXcqnqJ6-n2LilEsa3Hj",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 24 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "247",
                "endOffset": "26",
                "startLine": "247",
                "startOffset": "20"
            },
            {
                "src": "                    except:"
            }
        ],
        "key": "AXcqnqJ6-n2LilEsa3Hk",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "334",
                "endOffset": "22",
                "startLine": "334",
                "startOffset": "8"
            },
            {
                "src": "        natureDocument = self.documents.last().nature"
            }
        ],
        "key": "AXcqnqJ6-n2LilEsa3Hl",
        "msg": "Rename this local variable \\natureDocument\\ to match the regular expression ^[_a-z][a-z0-9_]*$.",
        "rule": "python:S117",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "362",
                "endOffset": "14",
                "startLine": "362",
                "startOffset": "12"
            },
            {
                "src": "            if self.etat == 'demand\\u00e9e':"
            }
        ],
        "key": "AXcqnqJ6-n2LilEsa3Hg",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "200",
                "endOffset": "18",
                "startLine": "200",
                "startOffset": "16"
            },
            {
                "src": "                if instance.get_workflow_ggd() != Instance.WF_GGD_SUBEDSR:"
            }
        ],
        "key": "AXcqnqKw-n2LilEsa3Hn",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "33",
                "endOffset": "10",
                "startLine": "33",
                "startOffset": "8"
            },
            {
                "src": "        if AutorisationAcces.objects.filter(avis_id=value.id).count() != 0:"
            }
        ],
        "key": "AXcqnqLf-n2LilEsa3Ho",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "21",
                "endOffset": "22",
                "startLine": "21",
                "startOffset": "6"
            },
            {
                "src": "class Acces_MediaTests(TestCase):"
            }
        ],
        "key": "AXcqnppX-n2LilEsa2_-",
        "msg": "Rename class \\Acces_MediaTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "154",
                "endOffset": "24",
                "startLine": "154",
                "startOffset": "8"
            },
            {
                "src": "    def test_Acces_Media(self):"
            }
        ],
        "key": "AXcqnppX-n2LilEsa3AD",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 37 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "278",
                "endOffset": "66",
                "startLine": "277",
                "startOffset": "12"
            },
            {
                "src": "            reponse = self.client.post(url_script.group('url'), {'itineraire_horaire': file5}, follow=True,"
            }
        ],
        "key": "AXcqnppX-n2LilEsa3AC",
        "msg": "Remove this assignment to local variable 'reponse'; the value is never used.",
        "rule": "python:S1854",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "8",
                "endOffset": "25",
                "startLine": "8",
                "startOffset": "0"
            },
            {
                "src": "from ..factories import *"
            }
        ],
        "key": "AXcqnpea-n2LilEsa28T",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "37",
                "endOffset": "14",
                "startLine": "37",
                "startOffset": "8"
            },
            {
                "src": "        except:"
            }
        ],
        "key": "AXcqnpea-n2LilEsa28U",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "235",
                "endOffset": "21",
                "startLine": "235",
                "startOffset": "8"
            },
            {
                "src": "    def presence_avis(self, username, state):"
            }
        ],
        "key": "AXcqnps4-n2LilEsa3BU",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 27 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "24",
                "endOffset": "23",
                "startLine": "24",
                "startOffset": "6"
            },
            {
                "src": "class Circuit_EDSRTests(TestCase):"
            }
        ],
        "key": "AXcqnpim-n2LilEsa29e",
        "msg": "Rename class \\Circuit_EDSRTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "147",
                "endOffset": "25",
                "startLine": "147",
                "startOffset": "8"
            },
            {
                "src": "    def test_Circuit_EDSR(self):"
            }
        ],
        "key": "AXcqnpim-n2LilEsa29i",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 51 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "22",
                "endOffset": "35",
                "startLine": "22",
                "startOffset": "6"
            },
            {
                "src": "class Circuit_EDSR_SansPreavisTests(TestCase):"
            }
        ],
        "key": "AXcqnpvF-n2LilEsa3B9",
        "msg": "Rename class \\Circuit_EDSR_SansPreavisTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "138",
                "endOffset": "37",
                "startLine": "138",
                "startOffset": "8"
            },
            {
                "src": "    def test_Circuit_EDSR_SansPreavis(self):"
            }
        ],
        "key": "AXcqnpvF-n2LilEsa3CB",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 20 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "22",
                "endOffset": "35",
                "startLine": "22",
                "startOffset": "6"
            },
            {
                "src": "class Circuit_EDSR_SansPreavisTests(TestCase):"
            }
        ],
        "key": "AXcqnp0z-n2LilEsa3Dy",
        "msg": "Rename class \\Circuit_EDSR_SansPreavisTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "138",
                "endOffset": "37",
                "startLine": "138",
                "startOffset": "8"
            },
            {
                "src": "    def test_Circuit_EDSR_SansPreavis(self):"
            }
        ],
        "key": "AXcqnp0z-n2LilEsa3D3",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 24 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "576",
                "endOffset": "14",
                "startLine": "576",
                "startOffset": "8"
            },
            {
                "src": "        retour = presence_avis('agent_group', 'rendu', log=False)"
            }
        ],
        "key": "AXcqnp0z-n2LilEsa3D2",
        "msg": "Remove the unused local variable \\retour\\.",
        "rule": "python:S1481",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "25",
                "endOffset": "27",
                "startLine": "25",
                "startOffset": "6"
            },
            {
                "src": "class Circuit_GGD_EDSRTests(TestCase):"
            }
        ],
        "key": "AXcqnpni-n2LilEsa2_T",
        "msg": "Rename class \\Circuit_GGD_EDSRTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "143",
                "endOffset": "29",
                "startLine": "143",
                "startOffset": "8"
            },
            {
                "src": "    def test_Circuit_GGD_EDSR(self):"
            }
        ],
        "key": "AXcqnpni-n2LilEsa2_X",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 47 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "22",
                "endOffset": "36",
                "startLine": "22",
                "startOffset": "6"
            },
            {
                "src": "class Circuit_GGD_EDSR_SansEdsrTests(TestCase):"
            }
        ],
        "key": "AXcqnpv_-n2LilEsa3CN",
        "msg": "Rename class \\Circuit_GGD_EDSR_SansEdsrTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "136",
                "endOffset": "41",
                "startLine": "136",
                "startOffset": "8"
            },
            {
                "src": "    def test_Circuit_GGD_EDSR_SansPreavis(self):"
            }
        ],
        "key": "AXcqnpv_-n2LilEsa3CR",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 23 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "208",
                "endOffset": "26",
                "startLine": "208",
                "startOffset": "12"
            },
            {
                "src": "        def affichage_avis():"
            }
        ],
        "key": "AXcqnpv_-n2LilEsa3CT",
        "msg": "Remove this unused function declaration.",
        "rule": "python:S5603",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "22",
                "endOffset": "39",
                "startLine": "22",
                "startOffset": "6"
            },
            {
                "src": "class Circuit_GGD_EDSR_SansPreavisTests(TestCase):"
            }
        ],
        "key": "AXcqnphI-n2LilEsa28-",
        "msg": "Rename class \\Circuit_GGD_EDSR_SansPreavisTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "136",
                "endOffset": "41",
                "startLine": "136",
                "startOffset": "8"
            },
            {
                "src": "    def test_Circuit_GGD_EDSR_SansPreavis(self):"
            }
        ],
        "key": "AXcqnphI-n2LilEsa29C",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 23 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "22",
                "endOffset": "39",
                "startLine": "22",
                "startOffset": "6"
            },
            {
                "src": "class Circuit_GGD_EDSR_SansPreavisTests(TestCase):"
            }
        ],
        "key": "AXcqnptf-n2LilEsa3Ba",
        "msg": "Rename class \\Circuit_GGD_EDSR_SansPreavisTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "136",
                "endOffset": "41",
                "startLine": "136",
                "startOffset": "8"
            },
            {
                "src": "    def test_Circuit_GGD_EDSR_SansPreavis(self):"
            }
        ],
        "key": "AXcqnptf-n2LilEsa3Be",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 24 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "25",
                "endOffset": "30",
                "startLine": "25",
                "startOffset": "6"
            },
            {
                "src": "class Circuit_GGD_SUBEDSRTests(TestCase):"
            }
        ],
        "key": "AXcqnprK-n2LilEsa3Ax",
        "msg": "Rename class \\Circuit_GGD_SUBEDSRTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "141",
                "endOffset": "32",
                "startLine": "141",
                "startOffset": "8"
            },
            {
                "src": "    def test_Circuit_GGD_SUBEDSR(self):"
            }
        ],
        "key": "AXcqnprK-n2LilEsa3A1",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 49 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "22",
                "endOffset": "42",
                "startLine": "22",
                "startOffset": "6"
            },
            {
                "src": "class Circuit_GGD_SUBEDSR_SansPreavisTests(TestCase):"
            }
        ],
        "key": "AXcqnp1t-n2LilEsa3ED",
        "msg": "Rename class \\Circuit_GGD_SUBEDSR_SansPreavisTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "134",
                "endOffset": "44",
                "startLine": "134",
                "startOffset": "8"
            },
            {
                "src": "    def test_Circuit_GGD_SUBEDSR_SansPreavis(self):"
            }
        ],
        "key": "AXcqnp1t-n2LilEsa3EH",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 23 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "22",
                "endOffset": "42",
                "startLine": "22",
                "startOffset": "6"
            },
            {
                "src": "class Circuit_GGD_SUBEDSR_SansPreavisTests(TestCase):"
            }
        ],
        "key": "AXcqnpcq-n2LilEsa27v",
        "msg": "Rename class \\Circuit_GGD_SUBEDSR_SansPreavisTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "134",
                "endOffset": "44",
                "startLine": "134",
                "startOffset": "8"
            },
            {
                "src": "    def test_Circuit_GGD_SUBEDSR_SansPreavis(self):"
            }
        ],
        "key": "AXcqnpcq-n2LilEsa27z",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 27 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "22",
                "endOffset": "35",
                "startLine": "22",
                "startOffset": "6"
            },
            {
                "src": "class Circuit_Instruction_IconTests(TestCase):"
            }
        ],
        "key": "AXcqnpmM-n2LilEsa2-z",
        "msg": "Rename class \\Circuit_Instruction_IconTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "106",
                "endOffset": "32",
                "startLine": "106",
                "startOffset": "8"
            },
            {
                "src": "    def test_Circuit_Instruction(self):"
            }
        ],
        "key": "AXcqnpmM-n2LilEsa2-3",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 32 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "8",
                "endOffset": "34",
                "startLine": "8",
                "startOffset": "6"
            },
            {
                "src": "class InstructionCircuit_EDSRTests(SeleniumCommunClass):"
            }
        ],
        "key": "AXcqnpzH-n2LilEsa3DQ",
        "msg": "Rename class \\InstructionCircuit_EDSRTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "10",
                "endOffset": "38",
                "startLine": "10",
                "startOffset": "6"
            },
            {
                "src": "class InstructionCircuit_GGD_EDSRTests(SeleniumCommunClass):"
            }
        ],
        "key": "AXcqnpuQ-n2LilEsa3Bt",
        "msg": "Rename class \\InstructionCircuit_GGD_EDSRTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "10",
                "endOffset": "41",
                "startLine": "10",
                "startOffset": "6"
            },
            {
                "src": "class InstructionCircuit_GGD_SUBEDSRTests(SeleniumCommunClass):"
            }
        ],
        "key": "AXcqnpd7-n2LilEsa28M",
        "msg": "Rename class \\InstructionCircuit_GGD_SUBEDSRTests\\ to match the regular expression ^_?([A-Z_][a-zA-Z0-9]*|[a-z_][a-z0-9_]*)$.",
        "rule": "python:S101",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "4",
                "endOffset": "44",
                "startLine": "4",
                "startOffset": "0"
            },
            {
                "src": "from instructions.views.instruction import *"
            }
        ],
        "key": "AXcqnqOn-n2LilEsa3Hy",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "5",
                "endOffset": "37",
                "startLine": "5",
                "startOffset": "0"
            },
            {
                "src": "from instructions.views.avis import *"
            }
        ],
        "key": "AXcqnqOn-n2LilEsa3Hz",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "6",
                "endOffset": "40",
                "startLine": "6",
                "startOffset": "0"
            },
            {
                "src": "from instructions.views.preavis import *"
            }
        ],
        "key": "AXcqnqOn-n2LilEsa3H0",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "7",
                "endOffset": "46",
                "startLine": "7",
                "startOffset": "0"
            },
            {
                "src": "from instructions.views.tableaudebord import *"
            }
        ],
        "key": "AXcqnqOn-n2LilEsa3H1",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "37",
                "endOffset": "24",
                "startLine": "37",
                "startOffset": "8"
            },
            {
                "src": "    def get_context_data(self, **kwargs):"
            }
        ],
        "key": "AXcqnqHP-n2LilEsa3HP",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 61 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "150",
                "endOffset": "18",
                "startLine": "150",
                "startOffset": "16"
            },
            {
                "src": "                if UserHelper.get_role_name(self.request.user) == 'edsragent':"
            }
        ],
        "key": "AXcqnqHP-n2LilEsa3HO",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "185",
                "endOffset": "18",
                "startLine": "185",
                "startOffset": "8"
            },
            {
                "src": "    def form_valid(self, form):"
            }
        ],
        "key": "AXcqnqHP-n2LilEsa3HQ",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 64 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "225",
                "endOffset": "20",
                "startLine": "225",
                "startOffset": "16"
            },
            {
                "src": "                pass"
            }
        ],
        "key": "AXcqnqHP-n2LilEsa3HR",
        "msg": "Either remove or fill this block of code.",
        "rule": "python:S108",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "248",
                "endOffset": "18",
                "startLine": "248",
                "startOffset": "8"
            },
            {
                "src": "    def form_valid(self, form):"
            }
        ],
        "key": "AXcqnqHP-n2LilEsa3HS",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 19 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "292",
                "endOffset": "18",
                "startLine": "292",
                "startOffset": "8"
            },
            {
                "src": "    def form_valid(self, form):"
            }
        ],
        "key": "AXcqnqHP-n2LilEsa3HT",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 42 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "440",
                "endOffset": "11",
                "startLine": "440",
                "startOffset": "8"
            },
            {
                "src": "    def get(self, request, *args, **kwargs):"
            }
        ],
        "key": "AXcqnqHP-n2LilEsa3HU",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 18 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "188",
                "endOffset": "18",
                "startLine": "188",
                "startOffset": "8"
            },
            {
                "src": "    def form_valid(self, form):"
            }
        ],
        "key": "AXcqnqFJ-n2LilEsa3G1",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 31 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "227",
                "endOffset": "18",
                "startLine": "227",
                "startOffset": "16"
            },
            {
                "src": "                if not Avis.objects.filter(service_concerne='sdis').filter(instruction=form.instance).exists():"
            }
        ],
        "key": "AXcqnqFJ-n2LilEsa3Gw",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "290",
                "endOffset": "18",
                "startLine": "290",
                "startOffset": "16"
            },
            {
                "src": "                if form.instance.manif.get_cerfa().consultServices == AbstractInstructionConfig.LISTE_MODE_CONSULT['Consultation obligatoire']:"
            }
        ],
        "key": "AXcqnqFJ-n2LilEsa3Gx",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "291",
                "endOffset": "22",
                "startLine": "291",
                "startOffset": "20"
            },
            {
                "src": "                    if form.instance.get_nb_avis() &lt; 2:"
            }
        ],
        "key": "AXcqnqFJ-n2LilEsa3Gy",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "343",
                "endOffset": "14",
                "startLine": "343",
                "startOffset": "12"
            },
            {
                "src": "            if form.instance.manif.get_cerfa().consultServices == AbstractInstructionConfig.LISTE_MODE_CONSULT['Consultation obligatoire']:"
            }
        ],
        "key": "AXcqnqFJ-n2LilEsa3Gz",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "344",
                "endOffset": "18",
                "startLine": "344",
                "startOffset": "16"
            },
            {
                "src": "                if form.instance.get_nb_avis() &lt; 2:"
            }
        ],
        "key": "AXcqnqFJ-n2LilEsa3G0",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "163",
                "endOffset": "18",
                "startLine": "163",
                "startOffset": "8"
            },
            {
                "src": "    def form_valid(self, form):"
            }
        ],
        "key": "AXcqnqIK-n2LilEsa3HX",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 16 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "16",
                "endOffset": "20",
                "startLine": "16",
                "startOffset": "4"
            },
            {
                "src": "def get_instructions(user, temporalite, filtre_specifique, role, instance, request, annee=None):"
            }
        ],
        "key": "AXcqnqGL-n2LilEsa3HF",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 48 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "21",
                "endOffset": "23",
                "startLine": "21",
                "startOffset": "22"
            },
            {
                "src": "        intruction_qs = intruction_qs"
            }
        ],
        "key": "AXcqnqGL-n2LilEsa3HG",
        "msg": "Remove or correct this useless self-assignment.",
        "rule": "python:S1656",
        "type": "BUG"
    },
    {
        "code": [
            {
                "endLine": "162",
                "endOffset": "11",
                "startLine": "162",
                "startOffset": "8"
            },
            {
                "src": "    def get(self, request, role=None):"
            }
        ],
        "key": "AXcqnqGL-n2LilEsa3HH",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 148 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "386",
                "endOffset": "11",
                "startLine": "386",
                "startOffset": "8"
            },
            {
                "src": "    def get(self, request, role=None):"
            }
        ],
        "key": "AXcqnqGL-n2LilEsa3HI",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 235 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "409",
                "endOffset": "14",
                "startLine": "409",
                "startOffset": "12"
            },
            {
                "src": "            if dept:"
            }
        ],
        "key": "AXcqnqGL-n2LilEsa3G9",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "451",
                "endOffset": "30",
                "startLine": "451",
                "startOffset": "28"
            },
            {
                "src": "                            if instruction.get_avis_user(user).etat == \\demand\\u00e9\\:"
            }
        ],
        "key": "AXcqnqGL-n2LilEsa3G-",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "455",
                "endOffset": "30",
                "startLine": "455",
                "startOffset": "28"
            },
            {
                "src": "                            if instruction.get_avis_user(user).etat == \\transmis\\:"
            }
        ],
        "key": "AXcqnqGL-n2LilEsa3G_",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "459",
                "endOffset": "30",
                "startLine": "459",
                "startOffset": "28"
            },
            {
                "src": "                            if instruction.get_avis_user(user).etat == \\format\\u00e9\\:"
            }
        ],
        "key": "AXcqnqGL-n2LilEsa3HA",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "466",
                "endOffset": "30",
                "startLine": "466",
                "startOffset": "28"
            },
            {
                "src": "                            if instruction.get_avis_user(user).etat == \\distribu\\u00e9\\:"
            }
        ],
        "key": "AXcqnqGL-n2LilEsa3HB",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "470",
                "endOffset": "30",
                "startLine": "470",
                "startOffset": "28"
            },
            {
                "src": "                            if instruction.get_avis_user(user).etat == \\transmis\\:"
            }
        ],
        "key": "AXcqnqGL-n2LilEsa3HC",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "474",
                "endOffset": "30",
                "startLine": "474",
                "startOffset": "28"
            },
            {
                "src": "                            if instruction.get_avis_user(user).etat in [\\distribu\\u00e9\\, \\format\\u00e9\\]:"
            }
        ],
        "key": "AXcqnqGL-n2LilEsa3HD",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "483",
                "endOffset": "30",
                "startLine": "483",
                "startOffset": "28"
            },
            {
                "src": "                            if instruction.get_avis_user(user).etat == \\format\\u00e9\\:"
            }
        ],
        "key": "AXcqnqGL-n2LilEsa3HE",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "565",
                "endOffset": "66",
                "startLine": "564",
                "startOffset": "28"
            },
            {
                "src": "                            instruction.css = \\table_encours\\"
            }
        ],
        "key": "AXcqnqGL-n2LilEsa3HJ",
        "msg": "Either merge this branch with the identical one on line \\560\\ or change one of the implementations.",
        "rule": "python:S1871",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "7",
                "endOffset": "31",
                "startLine": "7",
                "startOffset": "0"
            },
            {
                "src": "from messagerie.models import *"
            }
        ],
        "key": "AXcqnsUk-n2LilEsa3Zn",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "5",
                "endOffset": "14",
                "startLine": "5",
                "startOffset": "4"
            },
            {
                "src": "def get_carnet(request, manif=None):"
            }
        ],
        "key": "AXcqnsWe-n2LilEsa3Z3",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 16 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "11",
                "endOffset": "10",
                "startLine": "11",
                "startOffset": "8"
            },
            {
                "src": "        if manif:"
            }
        ],
        "key": "AXcqnsWe-n2LilEsa3Z2",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "34",
                "endOffset": "24",
                "startLine": "34",
                "startOffset": "8"
            },
            {
                "src": "    def creer_et_envoyer(self, type_msg, expediteur, destinataires, titre, contenu, manifestation_liee=None,"
            }
        ],
        "key": "AXcqnsR3-n2LilEsa3Za",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 99 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "15",
                "endOffset": "20",
                "startLine": "15",
                "startOffset": "4"
            },
            {
                "src": "def envoi_msg_celery(self, msg_json, type_envoi):"
            }
        ],
        "key": "AXcqnsY4-n2LilEsa3Z5",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 63 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "8",
                "endOffset": "11",
                "startLine": "8",
                "startOffset": "4"
            },
            {
                "src": "def LastMsg(value):"
            }
        ],
        "key": "AXcqnsLd-n2LilEsa3Yb",
        "msg": "Rename function \\LastMsg\\ to match the regular expression ^[a-z_][a-z0-9_]*$.",
        "rule": "python:S1542",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "7",
                "endOffset": "18",
                "startLine": "7",
                "startOffset": "4"
            },
            {
                "src": "def separeLaFleche(value):"
            }
        ],
        "key": "AXcqnsKx-n2LilEsa3Ya",
        "msg": "Rename function \\separeLaFleche\\ to match the regular expression ^[a-z_][a-z0-9_]*$.",
        "rule": "python:S1542",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "255",
                "endOffset": "12",
                "startLine": "255",
                "startOffset": "8"
            },
            {
                "src": "        test = self.selenium.find_element_by_id('filtre_mail').click()"
            }
        ],
        "key": "AXcqnsZ7-n2LilEsa3aB",
        "msg": "Remove the unused local variable \\test\\.",
        "rule": "python:S1481",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "273",
                "endOffset": "12",
                "startLine": "273",
                "startOffset": "8"
            },
            {
                "src": "        test = self.selenium.find_element_by_id('filtre_mail').click()"
            }
        ],
        "key": "AXcqnsZ7-n2LilEsa3aC",
        "msg": "Remove the unused local variable \\test\\.",
        "rule": "python:S1481",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "2",
                "endOffset": "28",
                "startLine": "2",
                "startOffset": "0"
            },
            {
                "src": "from .views.message import *"
            }
        ],
        "key": "AXcqnsX0-n2LilEsa3Z4",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "23",
                "endOffset": "43",
                "startLine": "23",
                "startOffset": "0"
            },
            {
                "src": "from administration.models.service import *"
            }
        ],
        "key": "AXcqnsVb-n2LilEsa3Zq",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "38",
                "endOffset": "11",
                "startLine": "38",
                "startOffset": "8"
            },
            {
                "src": "    def get(self, request):"
            }
        ],
        "key": "AXcqnsVb-n2LilEsa3Zr",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 27 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "123",
                "endOffset": "11",
                "startLine": "123",
                "startOffset": "8"
            },
            {
                "src": "    def get(self, request, *args, **kwargs):"
            }
        ],
        "key": "AXcqnsVb-n2LilEsa3Zs",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 64 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "139",
                "endOffset": "129",
                "startLine": "139",
                "startOffset": "122"
            },
            {
                "src": "                    destinataires.append({\\service\\: service, \\lu\\: lu}) if len(list(filter(lambda sch: sch['service'] == service, destinataires))) == 0 else \\\\"
            }
        ],
        "key": "AXcqnsVb-n2LilEsa3Zt",
        "msg": "Add a parameter to the parent lambda function and use variable \\service\\ as its default value; The value of \\service\\ might change at the next loop iteration.",
        "rule": "python:S1515",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "191",
                "endOffset": "12",
                "startLine": "191",
                "startOffset": "8"
            },
            {
                "src": "    def post(self, request):"
            }
        ],
        "key": "AXcqnsVb-n2LilEsa3Zu",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 32 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "239",
                "endOffset": "11",
                "startLine": "239",
                "startOffset": "8"
            },
            {
                "src": "    def get(self, request):"
            }
        ],
        "key": "AXcqnsVb-n2LilEsa3Zv",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 44 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "308",
                "endOffset": "11",
                "startLine": "308",
                "startOffset": "8"
            },
            {
                "src": "    def get(self, request):"
            }
        ],
        "key": "AXcqnsVb-n2LilEsa3Zw",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 59 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "314",
                "endOffset": "22",
                "startLine": "314",
                "startOffset": "16"
            },
            {
                "src": "                except:"
            }
        ],
        "key": "AXcqnsVb-n2LilEsa3Zx",
        "msg": "Specify an exception class to catch or reraise the exception",
        "rule": "python:S5754",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "434",
                "endOffset": "20",
                "startLine": "434",
                "startOffset": "4"
            },
            {
                "src": "def remplir_services(request):"
            }
        ],
        "key": "AXcqnsVb-n2LilEsa3Zy",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 49 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "630",
                "endOffset": "12",
                "startLine": "630",
                "startOffset": "8"
            },
            {
                "src": "    def post(self, request):"
            }
        ],
        "key": "AXcqnsVb-n2LilEsa3Zz",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 37 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "658",
                "endOffset": "32",
                "startLine": "657",
                "startOffset": "12"
            },
            {
                "src": "            action_pk = doc_associe"
            }
        ],
        "key": "AXcqnsVb-n2LilEsa3Z0",
        "msg": "Either merge this branch with the identical one on line \\654\\ or change one of the implementations.",
        "rule": "python:S1871",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "661",
                "endOffset": "30",
                "startLine": "660",
                "startOffset": "12"
            },
            {
                "src": "            action_pk = None"
            }
        ],
        "key": "AXcqnsVb-n2LilEsa3Z1",
        "msg": "Either merge this branch with the identical one on line \\642\\ or change one of the implementations.",
        "rule": "python:S1871",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "12",
                "endOffset": "18",
                "startLine": "12",
                "startOffset": "4"
            },
            {
                "src": "def verifier_acces(function=None):"
            }
        ],
        "key": "AXcqnrdZ-n2LilEsa3Vy",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 57 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "42",
                "endOffset": "18",
                "startLine": "42",
                "startOffset": "16"
            },
            {
                "src": "                if user.has_role('agentlocal'):"
            }
        ],
        "key": "AXcqnrdZ-n2LilEsa3Vx",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "26",
                "endOffset": "23",
                "startLine": "26",
                "startOffset": "8"
            },
            {
                "src": "    def notify_and_mail(self, recipients, subject, target, manifestation, template=None):"
            }
        ],
        "key": "AXcqnrWs-n2LilEsa3VI",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 46 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "46",
                "endOffset": "14",
                "startLine": "46",
                "startOffset": "12"
            },
            {
                "src": "            if manifestation.structure.organisateur in recipients:"
            }
        ],
        "key": "AXcqnrWs-n2LilEsa3VH",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "113",
                "endOffset": "14",
                "startLine": "113",
                "startOffset": "12"
            },
            {
                "src": "            if 'compagnieagent' in self.role and 'compagnieagentlocal' not in self.role:"
            }
        ],
        "key": "AXcqnosK-n2LilEsa24w",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "67",
                "endOffset": "14",
                "startLine": "67",
                "startOffset": "12"
            },
            {
                "src": "            if obj.structure.manifs.filter(instruction__isnull=False).exists():"
            }
        ],
        "key": "AXcqnrRV-n2LilEsa3VA",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "68",
                "endOffset": "18",
                "startLine": "68",
                "startOffset": "16"
            },
            {
                "src": "                if not request.user.is_superuser and \\\\"
            }
        ],
        "key": "AXcqnrRV-n2LilEsa3VB",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "49",
                "endOffset": "14",
                "startLine": "49",
                "startOffset": "12"
            },
            {
                "src": "            if not request.user.is_superuser and not \\Administrateurs techniques\\ in request.user.groups.values_list('name', flat=True):"
            }
        ],
        "key": "AXcqnrQN-n2LilEsa3U_",
        "msg": "Merge this if statement with the enclosing one.",
        "rule": "python:S1066",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "28",
                "endOffset": "25",
                "startLine": "28",
                "startOffset": "4"
            },
            {
                "src": "def verifier_proprietaire(function=None):"
            }
        ],
        "key": "AXcqnrVN-n2LilEsa3VG",
        "msg": "Refactor this function to reduce its Cognitive Complexity from 16 to the 15 allowed.",
        "rule": "python:S3776",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "5",
                "endOffset": "26",
                "startLine": "5",
                "startOffset": "0"
            },
            {
                "src": "from ..decorators import *"
            }
        ],
        "key": "AXcqnrT5-n2LilEsa3VD",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "6",
                "endOffset": "21",
                "startLine": "6",
                "startOffset": "0"
            },
            {
                "src": "from ..forms import *"
            }
        ],
        "key": "AXcqnrT5-n2LilEsa3VE",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    },
    {
        "code": [
            {
                "endLine": "7",
                "endOffset": "22",
                "startLine": "7",
                "startOffset": "0"
            },
            {
                "src": "from ..models import *"
            }
        ],
        "key": "AXcqnrT5-n2LilEsa3VF",
        "msg": "Import only needed names or import the module and then use its members.",
        "rule": "python:S2208",
        "type": "CODE_SMELL"
    }
]